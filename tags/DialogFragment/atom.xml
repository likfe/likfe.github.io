<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://likfe.com</id>
    <title>Cafeting • Posts by &#34;dialogfragment&#34; tag</title>
    <link href="https://likfe.com" />
    <updated>2017-06-01T02:56:29.000Z</updated>
    <category term="Android" />
    <category term="Flurry" />
    <category term="Confluence" />
    <category term="反编译" />
    <category term="ReactNative" />
    <category term="AccessibilityNodeInfo" />
    <category term="StackOverflow" />
    <category term="Proxy" />
    <category term="AndroidStudio" />
    <category term="Translucent" />
    <category term="SwipeBack" />
    <category term="PopWindow" />
    <category term="AMH" />
    <category term="Flarum" />
    <category term="PHP" />
    <category term="Composer" />
    <category term="ViewPager" />
    <category term="ADB" />
    <category term="Clipboard" />
    <category term="framework" />
    <category term="gradle" />
    <category term="DialogFragment" />
    <category term="PopupWindow" />
    <category term="Google" />
    <category term="Glide" />
    <category term="Intent" />
    <category term="RecyclerView" />
    <category term="Lambda" />
    <category term="Leancloud" />
    <category term="Gradle" />
    <category term="Messenger" />
    <category term="Make" />
    <category term="Mac" />
    <category term="Linux" />
    <category term="JDK" />
    <category term="Fragment" />
    <category term="View" />
    <category term="Scrollbar" />
    <category term="备案" />
    <category term="域名" />
    <category term="Github" />
    <category term="GreenDao" />
    <category term="Rust" />
    <category term="IDEA" />
    <category term="GooglePlay" />
    <category term="Docker" />
    <category term="Jenkins" />
    <category term="MAMP" />
    <category term="树莓派" />
    <category term="Sublime Text" />
    <category term="Emmet" />
    <category term="ThinkPHP" />
    <category term="GitBook" />
    <category term="OSX" />
    <entry>
        <id>https://likfe.com/2017/06/01/android-dialogfragment-as-pop/</id>
        <title>Android 必知必会 - DialogFragment 实现类似 PopupWindow 效果</title>
        <link rel="alternate" href="https://likfe.com/2017/06/01/android-dialogfragment-as-pop/"/>
        <content type="html">&lt;p&gt;近期有网友根据 &lt;a href=&#34;http://blog.csdn.net/ys743276112/article/details/52962046&#34;&gt;Android 必知必会 - DialogFragment 使用总结&lt;/a&gt; 做一些业务，但是目标却是用 DialogFragment 实现类似 PopupWindow 效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只拦截自身所占空间部分的事件，其余空间的点击事件不处理&lt;/li&gt;
&lt;li&gt;可以根据某个 View 定位自身位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然在功能上 PopupWindow 更符合需要，但是使用 DialogFragment 代码更简洁、更方便封装功能模块。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;基础知识点&#34;&gt;&lt;a href=&#34;#基础知识点&#34; class=&#34;headerlink&#34; title=&#34;基础知识点&#34;&gt;&lt;/a&gt;基础知识点&lt;/h2&gt;&lt;h3 id=&#34;WindowManager-LayoutParams-flags&#34;&gt;&lt;a href=&#34;#WindowManager-LayoutParams-flags&#34; class=&#34;headerlink&#34; title=&#34;WindowManager.LayoutParams.flags&#34;&gt;&lt;/a&gt;WindowManager.LayoutParams.flags&lt;/h3&gt;&lt;p&gt;&lt;code&gt;WindowManager.LayoutParams.flags&lt;/code&gt; 修改 Window 的表现行为&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* Various behavioral options/flags.  Default is none.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_ALLOW_LOCK_WHILE_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DIM_BEHIND&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_FOCUSABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_TOUCHABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_TOUCH_MODAL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_TOUCHABLE_WHEN_WAKING&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_KEEP_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_IN_SCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_NO_LIMITS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_FULLSCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_FORCE_NOT_FULLSCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SECURE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SCALED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_IGNORE_CHEEK_PRESSES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_INSET_DECOR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_ALT_FOCUSABLE_IM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_WATCH_OUTSIDE_TOUCH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SHOW_WHEN_LOCKED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SHOW_WALLPAPER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_TURN_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DISMISS_KEYGUARD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SPLIT_TOUCH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_HARDWARE_ACCELERATED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LOCAL_FOCUS_MODE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以上可以看到它有很多可选项，加上可以多个相互组合，能满足很多需求，这里重点关注三个属性值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FLAG_NOT_TOUCH_MODAL&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: even when this window is focusable (its &lt;code&gt;FLAG_NOT_FOCUSABLE&lt;/code&gt; is not set), allow any pointer events outside of the window to be sent to the windows behind it.&lt;/p&gt;
&lt;p&gt; (API level 1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FLAG_TRANSLUCENT_NAVIGATION&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: request a translucent navigation bar with minimal system-provided background protection.&lt;/p&gt;
&lt;p&gt; (API level 19)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FLAG_TRANSLUCENT_STATUS&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: request a translucent status bar with minimal system-provided background protection.&lt;/p&gt;
&lt;p&gt; (API level 19)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更详细的介绍请点击 &lt;a href=&#34;https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams.html&#34;&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;FLAG_NOT_TOUCH_MODAL&lt;/code&gt; 可达到『只拦截自身所占空间部分的事件，其余空间的点击事件不处理』的需求，而 &lt;code&gt;FLAG_TRANSLUCENT_NAVIGATION&lt;/code&gt; 和 &lt;code&gt;FLAG_TRANSLUCENT_STATUS&lt;/code&gt; 主要是用来调整使用&lt;strong&gt;沉浸式状态栏&lt;/strong&gt;时显示自身位置不正确的问题。&lt;/p&gt;
&lt;h3 id=&#34;获取-View-位置的时机&#34;&gt;&lt;a href=&#34;#获取-View-位置的时机&#34; class=&#34;headerlink&#34; title=&#34;获取 View 位置的时机&#34;&gt;&lt;/a&gt;获取 View 位置的时机&lt;/h3&gt;&lt;p&gt;如果需要让 DialogFragment 在 &lt;code&gt;onCreate()&lt;/code&gt; 等生命周期函数内直接调用显示到某个 View 的位置处，可能无法正确获取到该 View 的坐标，具体参考 &lt;a href=&#34;http://blog.csdn.net/ys743276112/article/details/51396838&#34;&gt;Android必知必会-获取View坐标和长宽的时机&lt;/a&gt; 一文。&lt;/p&gt;
&lt;p&gt;但是，如果在界面显示给用户后，DialogFragment 的显示交给用户触发的话，就不需要在意这个问题了。&lt;/p&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;TopFragment.java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TopFragment&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DialogFragment&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;EXT_Y&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;y value&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;EXT_BAR&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;isTranslucentDecor&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; isTranslucentDecor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; TopFragment &lt;span class=&#34;title function_&#34;&gt;getInstant&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; getInstant(y, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; TopFragment &lt;span class=&#34;title function_&#34;&gt;getInstant&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; isTranslucentDecor)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;TopFragment&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;fragment&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TopFragment&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Bundle&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ext&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Bundle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ext.putInt(EXT_Y, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ext.putBoolean(EXT_BAR, isTranslucentDecor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fragment.setArguments(ext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; fragment;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        setStyle(DialogFragment.STYLE_NO_TITLE, R.style.dialogFrag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Bundle&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getArguments();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (args != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            y = args.getInt(EXT_Y, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            isTranslucentDecor = args.getBoolean(EXT_BAR, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            y = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            isTranslucentDecor = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; View &lt;span class=&#34;title function_&#34;&gt;onCreateView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(LayoutInflater inflater, ViewGroup container,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;                             Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getDialog().setCanceledOnTouchOutside(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rootView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_top, container, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;Window&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getDialog().getWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setBackgroundDrawableResource(android.R.color.transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.getDecorView().setPadding(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        WindowManager.&lt;span class=&#34;type&#34;&gt;LayoutParams&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;wlp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; window.getAttributes();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.width = WindowManager.LayoutParams.MATCH_PARENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.height = WindowManager.LayoutParams.WRAP_CONTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isTranslucentDecor) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            wlp.flags |= WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.gravity = Gravity.TOP;&lt;span class=&#34;comment&#34;&gt;//必须为 TOP，否则定位不准确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.y = y;&lt;span class=&#34;comment&#34;&gt;//配合 Gravity.TOP 才能准确定位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setAttributes(wlp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	&lt;span class=&#34;comment&#34;&gt;//Debug info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rootView.findViewById(R.id.vvv).setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View&lt;/span&gt;.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Toast.makeText(getActivity(), &lt;span class=&#34;string&#34;&gt;&amp;quot;dialogFragment 响应了点击事件&amp;quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rootView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;MainActivity.java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	findViewById(R.id.bt_menu).setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View&lt;/span&gt;.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;TextView&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.tv_title);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TopFragment.getInstant(title.getBottom()).show(getSupportFragmentManager(), &lt;span class=&#34;string&#34;&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意：如果当前 Activity 使用了&lt;strong&gt;沉浸式状态栏&lt;/strong&gt;，需要使用 &lt;code&gt;TopFragment.getInstant(int y, boolean isTranslucentDecor)&lt;/code&gt; 方法，并且 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;true&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;效果图&#34;&gt;&lt;a href=&#34;#效果图&#34; class=&#34;headerlink&#34; title=&#34;效果图&#34;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;未使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;false&lt;/code&gt; ，位置正确&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;false&lt;/code&gt; ，位置定位差个状态栏高度&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;true&lt;/code&gt; ，位置正确&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183835306?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s1&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183850744?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s2&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183904651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s3&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;总的来说，这里基本完成了要求的效果，但是定位只能指定其顶部开始的位置，不方便底部定位到某个 View 的上面，因为高度自适应的话，在页面渲染完成前是不能知道它的高度的。当然，你可以使用固定高度布局的方式来实现随意定位。&lt;/p&gt;
&lt;p&gt;有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="DialogFragment" />
        <category term="PopupWindow" />
        <updated>2017-06-01T02:56:29.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2016/10/27/dialog-fragment/</id>
        <title>Android 必知必会 - DialogFragment 使用总结</title>
        <link rel="alternate" href="https://likfe.com/2016/10/27/dialog-fragment/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;Android 官方推荐使用 &lt;code&gt;DialogFragment&lt;/code&gt; 来代替 &lt;code&gt;Dialog&lt;/code&gt; ，可以让它具有更高的可复用性（降低耦合）和更好的便利性（很好的处理屏幕翻转的情况）。&lt;/p&gt;
&lt;p&gt;而创建 &lt;code&gt;DialogFragment&lt;/code&gt; 有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;覆写其 &lt;code&gt;onCreateDialog&lt;/code&gt; 方法 — ①&lt;/li&gt;
&lt;li&gt;覆写其 &lt;code&gt;onCreateView&lt;/code&gt; 方法 — ②&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然这两种方式都能实现相同的效果，但是它们各有自己适合的应用场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方法 ①，一般用于创建替代传统的 &lt;code&gt;Dialog&lt;/code&gt; 对话框的场景，UI 简单，功能单一。&lt;/li&gt;
&lt;li&gt;方法 ②，一般用于创建复杂内容弹窗或全屏展示效果的场景，UI 复杂，功能复杂，一般有网络请求等异步操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;应用&#34;&gt;&lt;a href=&#34;#应用&#34; class=&#34;headerlink&#34; title=&#34;应用&#34;&gt;&lt;/a&gt;应用&lt;/h2&gt;&lt;h3 id=&#34;基本用法&#34;&gt;&lt;a href=&#34;#基本用法&#34; class=&#34;headerlink&#34; title=&#34;基本用法&#34;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;对于方法 ①&lt;/strong&gt;，创建一个 &lt;code&gt;Dialog&lt;/code&gt; 并返回它即可：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Dialog &lt;span class=&#34;title function_&#34;&gt;onCreateDialog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;//为了样式统一和兼容性，可以使用 V7 包下的 AlertDialog.Builder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    AlertDialog.&lt;span class=&#34;type&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;builder&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AlertDialog&lt;/span&gt;.Builder(getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;// 设置主题的构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.CustomDialog);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    builder.setTitle(&lt;span class=&#34;string&#34;&gt;&amp;quot;注意：&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           .setMessage(&lt;span class=&#34;string&#34;&gt;&amp;quot;是否退出应用？&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           .setPositiveButton(&lt;span class=&#34;string&#34;&gt;&amp;quot;确定&amp;quot;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           .setNegativeButton(&lt;span class=&#34;string&#34;&gt;&amp;quot;取消&amp;quot;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           .setCancelable(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;comment&#34;&gt;//builder.show(); // 不能在这里使用 show() 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; builder.create();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然，你也可以使用自定义 &lt;code&gt;View&lt;/code&gt; 来创建：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Dialog &lt;span class=&#34;title function_&#34;&gt;onCreateDialog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	AlertDialog.&lt;span class=&#34;type&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;builder&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AlertDialog&lt;/span&gt;.Builder(getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;// 设置主题的构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.CustomDialog);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;inflater&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getActivity().getLayoutInflater();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    builder.setView(view) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		&lt;span class=&#34;comment&#34;&gt;// Do Someting,eg: TextView tv = view.findViewById(R.id.tv);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; builder.create();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;PS：创建 &lt;code&gt;Dialog&lt;/code&gt; 的方式有多种，比如下面这种，使用时略有差异，需要自己注意：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Dialog &lt;span class=&#34;title function_&#34;&gt;onCreateDialog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;inflater&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getActivity().getLayoutInflater();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;Dialog&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;dialog&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Dialog&lt;/span&gt;(getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置主题的构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;// Dialog dialog = new Dialog(getActivity(), R.style.CustomDialog);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dialog.setContentView(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;// Do Someting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dialog;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;对于方法 ②&lt;/strong&gt;，和普通的 &lt;code&gt;Fragment&lt;/code&gt; 用法基本一致：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; View &lt;span class=&#34;title function_&#34;&gt;onCreateView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rootView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, container, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Do Someting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rootView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 设置主题需要在 onCreate() 方法中调用 setStyle() 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setStyle(DialogFragment.STYLE_NO_TITLE, R.style.CustomDialog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;处理屏幕翻转&#34;&gt;&lt;a href=&#34;#处理屏幕翻转&#34; class=&#34;headerlink&#34; title=&#34;处理屏幕翻转&#34;&gt;&lt;/a&gt;处理屏幕翻转&lt;/h3&gt;&lt;p&gt;如果使用传统的 &lt;code&gt;Dialog&lt;/code&gt; ，需要我们手动处理屏幕翻转的情况，但使用 &lt;code&gt;DialogFragment&lt;/code&gt; 的话，则不需要我们进行任何处理，&lt;code&gt;FragmentManager&lt;/code&gt; 会自动管理 &lt;code&gt;DialogFragment&lt;/code&gt; 的生命周期。&lt;/p&gt;
&lt;p&gt;扩展阅读：&lt;a href=&#34;http://likfe.com/&#34;&gt;Dialog 在屏幕翻转时的处理&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;无标题栏-x2F-全屏&#34;&gt;&lt;a href=&#34;#无标题栏-x2F-全屏&#34; class=&#34;headerlink&#34; title=&#34;无标题栏&amp;#x2F;全屏&#34;&gt;&lt;/a&gt;无标题栏&amp;#x2F;全屏&lt;/h3&gt;&lt;p&gt;在基本用法里代码注释有设置主题的地方，下面详细说下两种方法下设置无标题栏和实现全屏的方式：&lt;/p&gt;
&lt;h4 id=&#34;无标题栏&#34;&gt;&lt;a href=&#34;#无标题栏&#34; class=&#34;headerlink&#34; title=&#34;无标题栏&#34;&gt;&lt;/a&gt;无标题栏&lt;/h4&gt;&lt;p&gt;对于方法 ① ：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Dialog &lt;span class=&#34;title function_&#34;&gt;onCreateDialog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;inflater&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getActivity().getLayoutInflater();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;Dialog&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;dialog&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Dialog&lt;/span&gt;(getActivity(), R.style.CustomDialog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;// 关闭标题栏，setContentView() 之前调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.setContentView(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.setCanceledOnTouchOutside(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dialog;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;对于方法 ②：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * setStyle() 的第一个参数有四个可选值：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * STYLE_NORMAL|STYLE_NO_TITLE|STYLE_NO_FRAME|STYLE_NO_INPUT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * 其中 STYLE_NO_TITLE 和 STYLE_NO_FRAME 可以关闭标题栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * 每一个参数的详细用途可以直接看 Android 源码的说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setStyle(DialogFragment.STYLE_NO_TITLE, R.style.CustomDialog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;实现全屏（宽-x2F-高度全屏）&#34;&gt;&lt;a href=&#34;#实现全屏（宽-x2F-高度全屏）&#34; class=&#34;headerlink&#34; title=&#34;实现全屏（宽&amp;#x2F;高度全屏）&#34;&gt;&lt;/a&gt;实现全屏（宽&amp;#x2F;高度全屏）&lt;/h4&gt;&lt;p&gt;常用的形式大多是宽度上和屏幕一样宽，高度自适应，下面直接看代码：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法 ① ：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Dialog &lt;span class=&#34;title function_&#34;&gt;onCreateDialog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;inflater&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getActivity().getLayoutInflater();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;Dialog&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;dialog&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Dialog&lt;/span&gt;(getActivity(), R.style.CustomDialog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.setContentView(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dialog.setCanceledOnTouchOutside(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置宽度为屏宽、位置靠近屏幕底部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;Window&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; dialog.getWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	window.setBackgroundDrawableResource(R.color.transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	WindowManager.&lt;span class=&#34;type&#34;&gt;LayoutParams&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;wlp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; window.getAttributes();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	wlp.gravity = Gravity.BOTTOM;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	wlp.width = WindowManager.LayoutParams.MATCH_PARENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	wlp.height = WindowManager.LayoutParams.WRAP_CONTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	window.setAttributes(wlp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dialog;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;代码 &lt;code&gt;12&lt;/code&gt; 行设置了窗口的背景色为透明，这一步是必须的；&lt;/p&gt;
&lt;p&gt;代码 &lt;code&gt;15&lt;/code&gt; 行设置窗口的宽度为 &lt;code&gt;MATCH_PARENT&lt;/code&gt;,效果是和屏幕宽度一样大，同样你也可以设置高度的值。设置宽度和高度除了 &lt;code&gt;MATCH_PARENT&lt;/code&gt; 和 &lt;code&gt;WRAP_CONTENT&lt;/code&gt; ，也可以直接设置成具体的数值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法 ②：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setStyle(DialogFragment.STYLE_NO_TITLE, R.style.CustomDialog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; View &lt;span class=&#34;title function_&#34;&gt;onCreateView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getDialog().setCanceledOnTouchOutside(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rootView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_dialog, container, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 设置宽度为屏宽、靠近屏幕底部。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;Window&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getDialog().getWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setBackgroundDrawableResource(R.color.transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.getDecorView().setPadding(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        WindowManager.&lt;span class=&#34;type&#34;&gt;LayoutParams&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;wlp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; window.getAttributes();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.gravity = Gravity.BOTTOM;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.width = WindowManager.LayoutParams.MATCH_PARENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.height = WindowManager.LayoutParams.WRAP_CONTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setAttributes(wlp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rootView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;代码 &lt;code&gt;14&lt;/code&gt; 行设置了窗口的背景色为透明，这一步是必须的；&lt;/p&gt;
&lt;p&gt;代码 &lt;code&gt;15&lt;/code&gt; 行设置了窗口的 Pading 值全部为0，这一步也是必须的，内容不能填充全部宽度和高度。&lt;/p&gt;
&lt;p&gt;其他的和 ① 中的类似。&lt;/p&gt;
&lt;h3 id=&#34;应用场景区别&#34;&gt;&lt;a href=&#34;#应用场景区别&#34; class=&#34;headerlink&#34; title=&#34;应用场景区别&#34;&gt;&lt;/a&gt;应用场景区别&lt;/h3&gt;&lt;p&gt;文章一开始简单总结了方法 ① 和方法 ② 的应用场景，这里说明下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从基本的用法中可以看到方法 ① 为简单的替代 &lt;code&gt;Dialog&lt;/code&gt; 提供了非常方便的创建方式，比方法 ② 有优势&lt;/li&gt;
&lt;li&gt;方法 ① 在使用了多线程（例如网络请求）的情况下，不能正确的获取当前 Fragment 的状态，会产生空指针异常。方法 ② 则没有此问题，而且，其创建方式默认使用了自定义 View，更便于应对复杂 UI 的场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里举例说明：方法 ① 和方法 ② 的&lt;code&gt;//Do something&lt;/code&gt; 代码处，我们进行一些异步操作：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;TextView&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; rootView.findViewById(R.id.dialoag_tv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title.setText(&lt;span class=&#34;string&#34;&gt;&amp;quot;Value A&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SomeTask&lt;/span&gt;().execute(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SomeTask&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AsyncTask&lt;/span&gt;&amp;lt;String, Void, Boolean&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; Boolean &lt;span class=&#34;title function_&#34;&gt;doInBackground&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String... params)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 一些网络请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          	&lt;span class=&#34;comment&#34;&gt;// 成功时 return true;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 异常时 return false;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onPostExecute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Boolean aBoolean)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onPostExecute(aBoolean);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// if (!isVisible()) return;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (aBoolean) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                title.setText(&lt;span class=&#34;string&#34;&gt;&amp;quot;Value B&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; 如果在网络请求未结束或者刚结束时关闭了当前 &lt;code&gt;DialogFragment&lt;/code&gt; ，代码 &lt;code&gt;19&lt;/code&gt; 行就会报空指针异常了，代码 &lt;code&gt;17&lt;/code&gt; 的作用就是判断 &lt;code&gt;DialogFragment&lt;/code&gt; 当前的状态是否为可用态，但是 &lt;code&gt;isVisible()&lt;/code&gt; 以及 &lt;code&gt;isHide()&lt;/code&gt; 对于方法 ① 无法正确返回其状态，方法 ② 则正常。方法 ① 和方法 ② 创建 &lt;code&gt;DialogFragment&lt;/code&gt; 的一些状态并不是完全一致。&lt;/p&gt;
&lt;p&gt;PS：你也可以使用静态 &lt;code&gt; Handler&lt;/code&gt; 结合弱引用等来处理异步操作，那样对 &lt;code&gt;DialogFragment&lt;/code&gt; 状态的获取就不重要了。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;以上是个人在实际开发过程中的一点总结和看法，希望你能抱着存疑的态度进行尝试，如果有新的观点或者文章中有不正确的地方，欢迎和我联系。&lt;/p&gt;
&lt;p&gt;扩展阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/tianzhijiexian/p/4161811.html&#34;&gt;详细解读 DialogFragment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/angcyo/article/details/50613084&#34;&gt;Android–&amp;gt;Dialog&amp;#x2F;DialogFragment宽度高度修改&amp;#x2F;全屏,自定义样式&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/7189948/full-screen-dialogfragment-in-android&#34;&gt;Full Screen DialogFragment in Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：你可以通过下面的方式和我联系&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="DialogFragment" />
        <category term="Fragment" />
        <updated>2016-10-27T15:30:48.000Z</updated>
    </entry>

    <follow_challenge>
        <feedId>73986782175755264</feedId>
        <userId>72100854660436992</userId>
    </follow_challenge>
</feed>
