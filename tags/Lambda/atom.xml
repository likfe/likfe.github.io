<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://likfe.com</id>
    <title>Cafeting • Posts by &#34;lambda&#34; tag</title>
    <link href="https://likfe.com" />
    <updated>2016-07-06T06:29:25.000Z</updated>
    <category term="Android" />
    <category term="Flurry" />
    <category term="Confluence" />
    <category term="反编译" />
    <category term="ReactNative" />
    <category term="AccessibilityNodeInfo" />
    <category term="StackOverflow" />
    <category term="Proxy" />
    <category term="AndroidStudio" />
    <category term="Translucent" />
    <category term="SwipeBack" />
    <category term="PopWindow" />
    <category term="AMH" />
    <category term="Flarum" />
    <category term="PHP" />
    <category term="Composer" />
    <category term="ViewPager" />
    <category term="ADB" />
    <category term="Clipboard" />
    <category term="framework" />
    <category term="gradle" />
    <category term="DialogFragment" />
    <category term="PopupWindow" />
    <category term="Google" />
    <category term="Glide" />
    <category term="Intent" />
    <category term="RecyclerView" />
    <category term="Lambda" />
    <category term="Leancloud" />
    <category term="Gradle" />
    <category term="Messenger" />
    <category term="Make" />
    <category term="Mac" />
    <category term="Linux" />
    <category term="JDK" />
    <category term="Fragment" />
    <category term="View" />
    <category term="Scrollbar" />
    <category term="备案" />
    <category term="域名" />
    <category term="Github" />
    <category term="GreenDao" />
    <category term="Rust" />
    <category term="IDEA" />
    <category term="GooglePlay" />
    <category term="Docker" />
    <category term="Jenkins" />
    <category term="MAMP" />
    <category term="树莓派" />
    <category term="Sublime Text" />
    <category term="Emmet" />
    <category term="ThinkPHP" />
    <category term="GitBook" />
    <category term="OSX" />
    <entry>
        <id>https://likfe.com/2016/07/06/android-setting-lamdba/</id>
        <title>Android必知必会-Android Studio下配置和使用Lambda</title>
        <link rel="alternate" href="https://likfe.com/2016/07/06/android-setting-lamdba/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;和朋友讨论 &lt;code&gt;JAVA8&lt;/code&gt; 的新特性，聊到&lt;code&gt;Lambda&lt;/code&gt;，正好在掘金上看到一篇相关的文章，结合资料，作一个总结，特别是记录下实际使用中遇到的问题。&lt;/p&gt;
&lt;h3 id=&#34;什么是Lambda表达式&#34;&gt;&lt;a href=&#34;#什么是Lambda表达式&#34; class=&#34;headerlink&#34; title=&#34;什么是Lambda表达式&#34;&gt;&lt;/a&gt;什么是Lambda表达式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;lambda表达式，它将允许我们将行为传到函数里。在Java 8之前，如果想将行为传入函数，仅有的选择就是匿名类，需要6行代码。而定义行为最重要的那行代码，却混在中间不够突出。Lambda表达式取代了匿名类，取消了模板，允许用函数式风格编写代码。这样有时可读性更好，表达更清晰。&lt;/p&gt;
&lt;p&gt;— Java8 lambda表达式10个示例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;阅读完上面的文字估计也不是特别明白，对于我们日常开发Android，就是简化了匿名函数的使用，可以简单通过下面的示例来感受一下，如果你有更深的兴趣，文末有更多搜集的资料供你阅读。&lt;/p&gt;
&lt;h3 id=&#34;Lamdba示例&#34;&gt;&lt;a href=&#34;#Lamdba示例&#34; class=&#34;headerlink&#34; title=&#34;Lamdba示例&#34;&gt;&lt;/a&gt;Lamdba示例&lt;/h3&gt;&lt;h4 id=&#34;用lambda表达式实现Runnable&#34;&gt;&lt;a href=&#34;#用lambda表达式实现Runnable&#34; class=&#34;headerlink&#34; title=&#34;用lambda表达式实现Runnable&#34;&gt;&lt;/a&gt;用lambda表达式实现Runnable&lt;/h4&gt;&lt;p&gt;使用lambda表达式可以替换匿名类，而实现&lt;code&gt;Runnable&lt;/code&gt;接口是匿名类的最好示例。Java 8之前的&lt;code&gt;runnable&lt;/code&gt;实现方法，需要4行代码，而使用&lt;code&gt;lambda&lt;/code&gt;表达式只需要一行代码。只需要用&lt;code&gt;() -&amp;gt; &amp;#123;&amp;#125;&lt;/code&gt;代码块替代整个匿名类。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Java 8之前：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Thread&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Runnable&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;在Java8之前, 需要写很多代码&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Java 8方式：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Thread&lt;/span&gt;( () -&amp;gt; System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;使用Java8, Lambda表达式一目了然&amp;quot;&lt;/span&gt;) ).start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在Java8之前, 需要写很多代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用Java8, Lambda表达式一目了然&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子展示了Java 8 lambda表达式的语法，可以使用&lt;code&gt;lambda&lt;/code&gt;写出如下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(params) -&amp;gt; expression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(params) -&amp;gt; statement&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(params) -&amp;gt; &amp;#123; statements &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如，如果你的方法不对参数进行修改、重写，只是在控制台打印点东西的话，那么可以这样写：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;() -&amp;gt; System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你的方法接收两个参数，那么可以写成如下这样：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(int a, int b) -&amp;gt; a + b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;使用lambda表达式进行事件处理&#34;&gt;&lt;a href=&#34;#使用lambda表达式进行事件处理&#34; class=&#34;headerlink&#34; title=&#34;使用lambda表达式进行事件处理&#34;&gt;&lt;/a&gt;使用lambda表达式进行事件处理&lt;/h4&gt;&lt;p&gt;在Android日常开发中，我们常常会设置各种事件，比如&lt;code&gt;setOnClickListener&lt;/code&gt;、&lt;code&gt;setOnItemClickListener&lt;/code&gt;等等，下面对比下前后的写法变化：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;viewA.setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View&lt;/span&gt;.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            	&lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//使用lambda&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;viewA.setOnClickListener(v -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;viewA.setOnClickListener(View v -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样一对比是不是简洁很多？那么对于多个参数的&lt;code&gt;setOnItemClickListener&lt;/code&gt;怎么写呢？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xxxListView.setOnItemClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AdapterView&lt;/span&gt;.OnItemClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onItemClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AdapterView&amp;lt;?&amp;gt; parent, View view, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; position, &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; id)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//使用lambda后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xxxListView.setOnItemClickListener((parent,view,position,id)-&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xxxListView.setOnItemClickListener((AdapterView&amp;lt;?&amp;gt; parent, View view, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; position, &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; id)-&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//甚至&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xxxListView.setOnItemClickListener((a,b,c,d)-&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以上两种例子大概是日常Android开发中最为常用的，更多示例请访问 ：&lt;a href=&#34;http://www.importnew.com/16436.html&#34;&gt;Java8 lambda表达式10个示例&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;启用Lambda&#34;&gt;&lt;a href=&#34;#启用Lambda&#34; class=&#34;headerlink&#34; title=&#34;启用Lambda&#34;&gt;&lt;/a&gt;启用Lambda&lt;/h2&gt;&lt;p&gt;启用&lt;code&gt;Lamdba&lt;/code&gt;目前有两种方式，一个是使用Google官方的，一个是使用第三方Java8兼容插件，&lt;strong&gt;推荐使用第三方兼容插件&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;基本要求如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio 2.1+&lt;/li&gt;
&lt;li&gt;安装好 JAVA 8&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;方式一：Google官方方式&#34;&gt;&lt;a href=&#34;#方式一：Google官方方式&#34; class=&#34;headerlink&#34; title=&#34;方式一：Google官方方式&#34;&gt;&lt;/a&gt;方式一：Google官方方式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;要使用新的 Java 8 语言功能，还需使用新的 Jack 工具链。新的 Android 工具链将 Java 源语言编译成 Android 可读取的 Dalvik 可执行文件字节码，且有其自己的 .jack 库格式，在一个工具中提供了大多数工具链功能：重新打包、压缩、模糊化以及 Dalvik 可执行文件分包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是构建 Android Dalvik 可执行文件可用的两种工具链的对比：&lt;/p&gt;
&lt;p&gt;旧版 javac 工具链：&lt;br&gt;&lt;code&gt;javac (.java --&amp;gt; .class) --&amp;gt; dx (.class --&amp;gt; .dex)&lt;/code&gt;&lt;br&gt;新版 Jack 工具链：&lt;br&gt;&lt;code&gt;Jack (.java --&amp;gt; .jack --&amp;gt; .dex)&lt;/code&gt;&lt;br&gt;&lt;strong&gt;配置 Gradle&lt;/strong&gt;&lt;br&gt;如需为您的项目启用 Java 8 语言功能和 Jack，请在模块层级的 build.gradle 文件中输入以下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight groovy&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jackOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      enabled &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  compileOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sourceCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    targetCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;已知问题&lt;/strong&gt;&lt;br&gt;Instant Run 目前不能用于 Jack，在使用新的工具链时将被禁用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.android.com/preview/j8-jack.html#configuration&#34;&gt;Java 8 语言功能&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;方式二：使用第三方Java8兼容插件&#34;&gt;&lt;a href=&#34;#方式二：使用第三方Java8兼容插件&#34; class=&#34;headerlink&#34; title=&#34;方式二：使用第三方Java8兼容插件&#34;&gt;&lt;/a&gt;方式二：使用第三方Java8兼容插件&lt;/h3&gt;&lt;p&gt;下面是插件的&lt;code&gt;ReadMe&lt;/code&gt;的配置：添加下面的内容到项目的&lt;code&gt;build.gradle&lt;/code&gt;文件中&lt;/p&gt;
&lt;figure class=&#34;highlight groovy&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;buildscript &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     classpath &lt;span class=&#34;string&#34;&gt;&amp;#x27;me.tatarka:gradle-retrolambda:3.2.5&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Required because retrolambda is on maven central&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apply &lt;span class=&#34;attr&#34;&gt;plugin:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;com.android.application&amp;#x27;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//or apply plugin: &amp;#x27;java&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apply &lt;span class=&#34;attr&#34;&gt;plugin:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;me.tatarka.retrolambda&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在本人的项目中，是如下配置，可以避免很多不必要的错误：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build.gradle&lt;/code&gt;文件在项目根目录有一个，在Module下也有一个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#x2F;build.gradle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight groovy&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;buildscript &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        classpath &lt;span class=&#34;string&#34;&gt;&amp;#x27;com.android.tools.build:gradle:2.1.2&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        classpath &lt;span class=&#34;string&#34;&gt;&amp;#x27;me.tatarka:gradle-retrolambda:3.2.5&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        classpath &lt;span class=&#34;string&#34;&gt;&amp;#x27;me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    configurations.classpath.exclude &lt;span class=&#34;attr&#34;&gt;group:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;com.android.tools.external.lombok&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allprojects &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#x2F;app&amp;#x2F;build.gradle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight groovy&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;apply &lt;span class=&#34;attr&#34;&gt;plugin:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;com.android.application&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apply &lt;span class=&#34;attr&#34;&gt;plugin:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;me.tatarka.retrolambda&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	compileOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sourceCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        targetCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看到我在使用中多了&lt;a href=&#34;https://github.com/evant/android-retrolambda-lombok&#34;&gt;几个配置&lt;/a&gt;，不过都是在这个插件的&lt;code&gt;issue&lt;/code&gt;里查到的。建议仔细阅读下&lt;a href=&#34;https://github.com/evant/gradle-retrolambda&#34;&gt;配置说明&lt;/a&gt; ，可以适应一些实际项目中的一些特别需求。&lt;/p&gt;
&lt;h2 id=&#34;常见Error及解决方式&#34;&gt;&lt;a href=&#34;#常见Error及解决方式&#34; class=&#34;headerlink&#34; title=&#34;常见Error及解决方式&#34;&gt;&lt;/a&gt;常见Error及解决方式&lt;/h2&gt;&lt;h3 id=&#34;Couldnot-find-property-‘options’-on-task-‘-app-compileDebugJavaWithJack’&#34;&gt;&lt;a href=&#34;#Couldnot-find-property-‘options’-on-task-‘-app-compileDebugJavaWithJack’&#34; class=&#34;headerlink&#34; title=&#34;Couldnot find property ‘options’ on task ‘:app:compileDebugJavaWithJack’.&#34;&gt;&lt;/a&gt;Couldnot find property ‘options’ on task ‘:app:compileDebugJavaWithJack’.&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：使用Google官方的方式有一定的兼容性，使用Jack时不能同时使用APT，如果使用butterknife、Dagger等使用了APT的注解框架就不行了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;：使用retrolambda的兼容插件的方式启用lambda&lt;/p&gt;
&lt;h3 id=&#34;Doesn’t-seem-to-correctly-use-modified-lombok-version&#34;&gt;&lt;a href=&#34;#Doesn’t-seem-to-correctly-use-modified-lombok-version&#34; class=&#34;headerlink&#34; title=&#34;Doesn’t seem to correctly use modified lombok version&#34;&gt;&lt;/a&gt;Doesn’t seem to correctly use modified lombok version&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：&lt;a href=&#34;https://github.com/evant/android-retrolambda-lombok/issues/4&#34;&gt;参见这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;：按照我上面写的就不会出现这个问题了。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;对于想尝鲜的的开发者，启用Lamdba是个不错的选择，毕竟这个东西会慢慢普及的。下面是一些为想了解更多Lamdba使用方法的朋友搜集的资料以及本文参考的文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/5fc2b3362702&#34;&gt;jdk1.8新特性之lambda表达式及在Android Studio中的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.importnew.com/16436.html&#34;&gt;Java8 lambda表达式10个示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.importnew.com/10360.html&#34;&gt;Java 8简明教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/yuhanghate/article/details/51544201&#34;&gt;Error:Could not find property ‘options’ on task ‘:app:compileDebugJavaWithJack’.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/evant/android-retrolambda-lombok/issues/4&#34;&gt;Doesn’t seem to correctly use modified lombok version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/evant/gradle-retrolambda&#34;&gt;retrolambda插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：你可以通过下面的方式和我联系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Lambda" />
        <updated>2016-07-06T06:29:25.000Z</updated>
    </entry>

    <follow_challenge>
        <feedId>73986782175755264</feedId>
        <userId>72100854660436992</userId>
    </follow_challenge>
</feed>
