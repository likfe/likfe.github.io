<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://likfe.com</id>
    <title>Cafeting • Posts by &#34;android&#34; tag</title>
    <link href="https://likfe.com" />
    <updated>2024-08-26T08:22:57.000Z</updated>
    <category term="Android" />
    <category term="Flurry" />
    <category term="Confluence" />
    <category term="反编译" />
    <category term="ReactNative" />
    <category term="AccessibilityNodeInfo" />
    <category term="StackOverflow" />
    <category term="Proxy" />
    <category term="AndroidStudio" />
    <category term="Translucent" />
    <category term="SwipeBack" />
    <category term="PopWindow" />
    <category term="AMH" />
    <category term="Flarum" />
    <category term="PHP" />
    <category term="Composer" />
    <category term="ViewPager" />
    <category term="ADB" />
    <category term="Clipboard" />
    <category term="framework" />
    <category term="gradle" />
    <category term="DialogFragment" />
    <category term="PopupWindow" />
    <category term="Google" />
    <category term="Glide" />
    <category term="Intent" />
    <category term="RecyclerView" />
    <category term="Lambda" />
    <category term="Leancloud" />
    <category term="Gradle" />
    <category term="Messenger" />
    <category term="Make" />
    <category term="Mac" />
    <category term="Linux" />
    <category term="JDK" />
    <category term="Fragment" />
    <category term="View" />
    <category term="Scrollbar" />
    <category term="备案" />
    <category term="域名" />
    <category term="Github" />
    <category term="GreenDao" />
    <category term="Rust" />
    <category term="IDEA" />
    <category term="GooglePlay" />
    <category term="Docker" />
    <category term="Jenkins" />
    <category term="MAMP" />
    <category term="树莓派" />
    <category term="Sublime Text" />
    <category term="Emmet" />
    <category term="ThinkPHP" />
    <category term="GitBook" />
    <category term="OSX" />
    <entry>
        <id>https://likfe.com/2024/08/26/jcenter-down/</id>
        <title>Android 必知必会：ModuleVersionNotFoundException： Could not find xx</title>
        <link rel="alternate" href="https://likfe.com/2024/08/26/jcenter-down/"/>
        <content type="html">&lt;p&gt;关键词：ModuleVersionNotFoundException、Could not resolve all files for configuration、Could not find xx、JCenter&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;博主在构建一个年久失修的 Android 工程时遇到了 ModuleVersionNotFoundException: Could not find xx.xxx.xxx 的问题，经过排查，发现工程中仍然在使用来自 JCenter 的三方 sdk，数月前正常，但为何现在不能使用了？&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;详细日志如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Execution failed for task &amp;#x27;:app:dataBindingMergeDependencyArtifactsDebug&amp;#x27;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; Could not resolve all files for configuration &amp;#x27;:app:DebugCompileClasspath&amp;#x27;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;gt; Could not find com.jaeger.statusbarutil:library:1.5.1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Required by:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         project :app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;gt; Could not find org.litepal.android:core:2.0.0.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Required by:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         project :app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* Exception is:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;org.gradle.api.tasks.TaskExecutionException: Execution failed for task &amp;#x27;:app:dataBindingMergeDependencyArtifactsDebug&amp;#x27;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:38)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:327)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:314)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:307)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:293)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:417)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:339)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Caused by: org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration$ArtifactResolveException: Could not resolve all files for configuration &amp;#x27;:app:DebugCompileClasspath&amp;#x27;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.rethrowFailure(DefaultConfiguration.java:1524)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.access$3700(DefaultConfiguration.java:159)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$DefaultResolutionHost.rethrowFailure(DefaultConfiguration.java:2174)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.visitContents(DefaultConfiguration.java:1496)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.AbstractFileCollection.visitStructure(AbstractFileCollection.java:375)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.CompositeFileCollection.lambda$visitContents$0(CompositeFileCollection.java:119)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.collections.UnpackingVisitor.add(UnpackingVisitor.java:64)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.collections.UnpackingVisitor.add(UnpackingVisitor.java:89)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.DefaultFileCollectionFactory$ResolvingFileCollection.visitChildren(DefaultFileCollectionFactory.java:333)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.CompositeFileCollection.visitContents(CompositeFileCollection.java:119)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.AbstractFileCollection.visitStructure(AbstractFileCollection.java:375)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.CompositeFileCollection.lambda$visitContents$0(CompositeFileCollection.java:119)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.PropertyFileCollection.visitChildren(PropertyFileCollection.java:48)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.CompositeFileCollection.visitContents(CompositeFileCollection.java:119)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.file.AbstractFileCollection.visitStructure(AbstractFileCollection.java:375)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.fingerprint.impl.DefaultFileCollectionSnapshotter.snapshot(DefaultFileCollectionSnapshotter.java:51)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter$InputCollectingVisitor.visitInputFileProperty(DefaultInputFingerprinter.java:131)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.TaskExecution.visitRegularInputs(TaskExecution.java:322)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter.fingerprintInputProperties(DefaultInputFingerprinter.java:61)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionStateWithOutputs(CaptureStateBeforeExecutionStep.java:193)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$captureExecutionState$1(CaptureStateBeforeExecutionStep.java:141)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.BuildOperationStep$1.call(BuildOperationStep.java:37)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.BuildOperationStep.operation(BuildOperationStep.java:34)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionState(CaptureStateBeforeExecutionStep.java:130)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$execute$0(CaptureStateBeforeExecutionStep.java:75)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:75)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:327)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:314)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:307)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:293)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:417)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:339)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cause 1: org.gradle.internal.resolve.ModuleVersionNotFoundException: Could not find com.jaeger.statusbarutil:library:1.5.1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Required by:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    project :app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cause 2: org.gradle.internal.resolve.ModuleVersionNotFoundException: Could not find org.litepal.android:core:2.0.0.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Required by:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    project :app&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;a href=&#34;#原因&#34; class=&#34;headerlink&#34; title=&#34;原因&#34;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;虽然当年 JCenter 停止接收新的 sdk 上传之后，宣称「&lt;strong&gt;无限期&lt;/strong&gt;地将 JCenter 保留为只读存储库」，但是这个「无期限」还是迎来了它的期限 2024-08-15。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://jfrog.com/blog/jcenter-sunset/&#34;&gt;JCenter 在 2024 年 8 月 15 日关闭&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JCenter 在 8 月 15 日关闭后，所有 JCenter 请求将自动重定向到 Maven Central 并从那里提供服务。自动将所有请求从 &lt;code&gt;https://jcenter.bintray.com/&lt;/code&gt; 获取 Maven 包重定向到 Maven Central – &lt;code&gt;https://repo1.maven.org/maven2/&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a href=&#34;#解决方案&#34; class=&#34;headerlink&#34; title=&#34;解决方案&#34;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;h3 id=&#34;1-懒人临时方案：&#34;&gt;&lt;a href=&#34;#1-懒人临时方案：&#34; class=&#34;headerlink&#34; title=&#34;1. 懒人临时方案：&#34;&gt;&lt;/a&gt;1. 懒人临时方案：&lt;/h3&gt;&lt;p&gt;直接更换 &lt;code&gt;jcenter()&lt;/code&gt; 为阿里云的镜像  &lt;code&gt;maven &amp;#123; url &amp;#39;https://maven.aliyun.com/repository/public&amp;#39; &amp;#125;&lt;/code&gt;，目前阿里云镜像仓库还存着 jcenter 的资源。&lt;/p&gt;
&lt;h3 id=&#34;2-听劝，按照官方推荐，切换到-Maven-Central&#34;&gt;&lt;a href=&#34;#2-听劝，按照官方推荐，切换到-Maven-Central&#34; class=&#34;headerlink&#34; title=&#34;2. 听劝，按照官方推荐，切换到 Maven Central&#34;&gt;&lt;/a&gt;2. 听劝，按照官方推荐，切换到 Maven Central&lt;/h3&gt;&lt;p&gt;当然，这个前提是我们使用的这个 sdk 已经在 Maven Central 里上传了。&lt;/p&gt;
&lt;figure class=&#34;highlight groovy&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//删除： jcenter()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//添加：mavenCentral()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allprojects &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        google()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不过，既然我们遇到了 Could not find  xx，说明  sdk 年久失修，无人维护，开发者没有迁移到mavenCentral，因为目前所有 JCenter 请求自动重定向到 Maven Central 了。这就需要方案1+方案3结合。&lt;/p&gt;
&lt;h3 id=&#34;3-直接使用-aar-或者上传到自建-maven-仓库&#34;&gt;&lt;a href=&#34;#3-直接使用-aar-或者上传到自建-maven-仓库&#34; class=&#34;headerlink&#34; title=&#34;3. 直接使用 aar 或者上传到自建 maven 仓库&#34;&gt;&lt;/a&gt;3. 直接使用 aar 或者上传到自建 maven 仓库&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用方案1，阿里云镜像的文件搜索 &lt;a href=&#34;https://developer.aliyun.com/mvn/search&#34;&gt;https://developer.aliyun.com/mvn/search&lt;/a&gt; 获取 aar 。&lt;/li&gt;
&lt;li&gt;直接使用&lt;/li&gt;
&lt;li&gt;或者上传到自检或者三方的 maven 仓库中，然后添加 &lt;code&gt;maven &amp;#123; url &amp;#39;仓库地址&amp;#39; &amp;#125;&lt;/code&gt; 来使用&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2024-08-26T08:22:57.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2024/08/23/idea-rust-not-display-types/</id>
        <title>Rustrover、IDEA 的 Rust 类型不显示（已解决）</title>
        <link rel="alternate" href="https://likfe.com/2024/08/23/idea-rust-not-display-types/"/>
        <content type="html">&lt;p&gt;关键词：rustrover 类型不显示，rustrover 不显示类型，IntelliJ IDEA Rust 类型不显示，IntelliJ IDEA Rust 不显示类型&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;博主手欠，使用 IntelliJ IDEA 时，不小心在编辑器自动推倒显示的类型上，点击鼠标右键弹出 &lt;code&gt;Disable &amp;#39;Types&amp;#39; hints type&lt;/code&gt; 后点了一下，就禁用了类型显示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/likfe/imagerepo/dev/img/202408231815258.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;禁用类型现实之后是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/likfe/imagerepo/dev/img/202408231815662.jpg&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;这对于一个 Rust 开发来说变量或者方法的返回值类型非常重要，它决定了写代码时，如何处理这个变量，非常影响写代码的过程。&lt;/p&gt;
&lt;p&gt;如果不恢复显示类型，每次看类型都需要把鼠标放到变量名上面，等待 IDEA 自动展示变量的自动文档说明（如下图所示），这样太影响开发效率。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/likfe/imagerepo/dev/img/202408231816152.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;恢复显示变量和方法的类型&#34;&gt;&lt;a href=&#34;#恢复显示变量和方法的类型&#34; class=&#34;headerlink&#34; title=&#34;恢复显示变量和方法的类型&#34;&gt;&lt;/a&gt;恢复显示变量和方法的类型&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;恢复流程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Preferences&lt;/code&gt; &amp;#x3D;&amp;gt; &lt;code&gt;Editor&lt;/code&gt; &amp;#x3D;&amp;gt; &lt;code&gt;Inlay Hints&lt;/code&gt; &amp;#x3D;&amp;gt; &lt;code&gt;Types&lt;/code&gt; &amp;#x3D;&amp;gt; &lt;code&gt;Rust&lt;/code&gt;  全部勾选并保存&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/likfe/imagerepo/dev/img/202408231816552.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;目前来说，rustrover 或者 IDEA+Rust 插件的方式开发 Rust 项目，还是不够成熟，博主就遇到过:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 IDEA 里写的代码没有任何错误提示，但是无法通过编译的情况，大家使用时务必要多注意。&lt;/li&gt;
&lt;li&gt;目前还无法 Debug &lt;code&gt;Android + Rust&lt;/code&gt; 的工程里的 Rust 代码，还是需要 VsCode + LLDB 插件才行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Rust" />
        <category term="IDEA" />
        <updated>2024-08-23T09:54:15.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2023/11/21/cmdlineToolsWithJdk/</id>
        <title>一文了解：Android cmdline-tools 版本与其最小JDK关系</title>
        <link rel="alternate" href="https://likfe.com/2023/11/21/cmdlineToolsWithJdk/"/>
        <content type="html">&lt;p&gt;关键词：Android cmdline-tools 历史版本、Android cmdline-tools 最小JDK版本、JDK 对应 major version、JDK LTS 信息&lt;/p&gt;
&lt;p&gt;由于 JDK8 是一个常用的、较低的版本，因此只需关注 JDK8 及以上版本的运行情况。&lt;/p&gt;
&lt;h2 id=&#34;cmdline-tools-版本和最低-JDK&#34;&gt;&lt;a href=&#34;#cmdline-tools-版本和最低-JDK&#34; class=&#34;headerlink&#34; title=&#34;cmdline-tools 版本和最低 JDK&#34;&gt;&lt;/a&gt;cmdline-tools 版本和最低 JDK&lt;/h2&gt;&lt;p&gt;最终结论：（在 Mac 上，基于 JDK8 测试的结果）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;cmdline-tools 版本&lt;/th&gt;
&lt;th&gt;最低 JDK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Android 官网的 cmdline-tools 提供的最新版本是16.0（截止2024年09月05日），也就是说，其 Runtime 的 JDK 版本必须是 JDK17 及以上。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h3 id=&#34;检查流程&#34;&gt;&lt;a href=&#34;#检查流程&#34; class=&#34;headerlink&#34; title=&#34;检查流程&#34;&gt;&lt;/a&gt;检查流程&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;cmdline-tools 版本&lt;/th&gt;
&lt;th&gt;SdkManagerCliSettings&lt;/th&gt;
&lt;th&gt;AndroidLocationsProvider&lt;/th&gt;
&lt;th&gt;最低 JDK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;61 (JDK 17)&lt;/td&gt;
&lt;td&gt;55 (JDK 11)&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;61 (JDK 17)&lt;/td&gt;
&lt;td&gt;55 (JDK 11)&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;61 (JDK 17)&lt;/td&gt;
&lt;td&gt;55 (JDK 11)&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;55 (JDK 11)&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;55 (JDK 11)&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.0&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;52 (JDK 8)&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;通过上表可以看出，在 cmdline-tools 内部，各个 Jar 的编译目标 JDK 版本存在不一致的情况。因此，在实际运行时，需要将所有 Jar 文件的编译目标 JDK 版本的最大值作为 cmdline-tools 运行时的最小的 JDK 版本。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ java -version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java version &lt;span class=&#34;string&#34;&gt;&amp;quot;1.8.0_351&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; path/cmdline-tools/9.0/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ ./sdkmanager --list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Error: A JNI error has occurred, please check your installation and try again&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Exception &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; thread &lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; java.lang.UnsupportedClassVersionError: com/android/prefs/AndroidLocationsProvider has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由上述报错信息可知，&lt;code&gt;com/android/prefs/AndroidLocationsProvider&lt;/code&gt; 要求最低使用 version 55.0（JDK 11）。&lt;/p&gt;
&lt;p&gt;但是其他 class （比如 &lt;code&gt;lib/sdklib/libsdkmanager_lib.jar&lt;/code&gt; 内的 &lt;code&gt;com.android.sdklib.tool.sdkmanager.SdkManagerCliSettings&lt;/code&gt;）仍旧是 version 52.0 （JDK 8）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里的思路是：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接切换到cmdline-tools对应版本，然后基于 runtime JDK &amp;#x3D; 8 的环境，执行 &lt;code&gt;./sdkmanager --version&lt;/code&gt; 检查是否报错，如报错，查看要求的最低 version 为多少。（低于JDK8的不再验证）&lt;/p&gt;
&lt;p&gt;验证的脚本：&lt;code&gt;majorVersion.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用方法：.&amp;#x2F;majorVersion.sh path&amp;#x2F;cmdline-tools&amp;#x2F;11.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$1&lt;/span&gt;/bin/sdkmanager --version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$1&lt;/span&gt;/bin/sdkmanager --version 2&amp;gt;&amp;amp;1 | grep &lt;span class=&#34;string&#34;&gt;&amp;quot;class file&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jar_file=/lib/sdklib/libsdkmanager_lib.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;gt; &lt;span class=&#34;variable&#34;&gt;$jar_file&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 javap 命令解析 JAR 文件内指定的 class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;output=$(javap -verbose -classpath &lt;span class=&#34;string&#34;&gt;&amp;quot;$1&lt;span class=&#34;variable&#34;&gt;$&amp;#123;jar_file&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt; com.android.sdklib.tool.sdkmanager.SdkManagerCliSettings 2&amp;gt;&amp;amp;1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#echo &amp;quot;$output&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查找主要版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major_version=$(&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;variable&#34;&gt;$output&lt;/span&gt;&amp;quot;&lt;/span&gt; | grep  &lt;span class=&#34;string&#34;&gt;&amp;#x27;major version&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 打印主要版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;--&amp;gt; &lt;span class=&#34;variable&#34;&gt;$major_version&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jar_file=/lib/common/tools.common.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;gt; &lt;span class=&#34;variable&#34;&gt;$jar_file&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 javap 命令解析 JAR 文件内指定的 class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;output=$(javap -verbose -classpath &lt;span class=&#34;string&#34;&gt;&amp;quot;$1&lt;span class=&#34;variable&#34;&gt;$&amp;#123;jar_file&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt; com.android.prefs.AndroidLocationsProvider 2&amp;gt;&amp;amp;1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查找主要版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major_version=$(&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;variable&#34;&gt;$output&lt;/span&gt;&amp;quot;&lt;/span&gt; | grep  &lt;span class=&#34;string&#34;&gt;&amp;#x27;major version&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# # 打印主要版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;--&amp;gt; &lt;span class=&#34;variable&#34;&gt;$major_version&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;验证结果：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 11.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Exception &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; thread &lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; java.lang.UnsupportedClassVersionError: com/android/sdklib/tool/sdkmanager/SdkManagerCli has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 52.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/sdklib/libsdkmanager_lib.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/common/tools.common.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 10.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Exception &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; thread &lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; java.lang.UnsupportedClassVersionError: com/android/prefs/AndroidLocationsProvider has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/sdklib/libsdkmanager_lib.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/common/tools.common.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 9.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Exception &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; thread &lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; java.lang.UnsupportedClassVersionError: com/android/prefs/AndroidLocationsProvider has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/sdklib/libsdkmanager_lib.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/common/tools.common.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/sdklib/libsdkmanager_lib.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-&amp;gt; /lib/common/tools.common.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;major version: 52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h2 id=&#34;扩展资料&#34;&gt;&lt;a href=&#34;#扩展资料&#34; class=&#34;headerlink&#34; title=&#34;扩展资料&#34;&gt;&lt;/a&gt;扩展资料&lt;/h2&gt;&lt;h3 id=&#34;cmdline-tools-历史版本下载&#34;&gt;&lt;a href=&#34;#cmdline-tools-历史版本下载&#34; class=&#34;headerlink&#34; title=&#34;cmdline-tools 历史版本下载&#34;&gt;&lt;/a&gt;cmdline-tools 历史版本下载&lt;/h3&gt;&lt;p&gt;官网地址：&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;https://developer.android.com/studio&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;cmdline-tools 版本&lt;/th&gt;
&lt;th&gt;最低 JDK&lt;/th&gt;
&lt;th&gt;Mac&lt;/th&gt;
&lt;th&gt;Linux&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;16.0(latest)&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-mac-12266719_latest.zip&#34;&gt;commandlinetools-mac-12266719_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip&#34;&gt;commandlinetools-linux-12266719_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-win-12266719_latest.zip&#34;&gt;commandlinetools-win-12266719_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-mac-11479570_latest.zip&#34;&gt;commandlinetools-mac-11479570_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-linux-11479570_latest.zip&#34;&gt;commandlinetools-linux-11479570_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-win-11479570_latest.zip&#34;&gt;commandlinetools-win-11479570_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;commandlinetools-mac-11076708_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-linux-11076708_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-win-11076708_latest.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11.0&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;commandlinetools-mac-10406996_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-linux-10406996_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-win-10406996_latest.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-mac-9862592_latest.zip&#34;&gt;commandlinetools-mac-9862592_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-linux-9862592_latest.zip&#34;&gt;commandlinetools-linux-9862592_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://dl.google.com/android/repository/commandlinetools-win-9862592_latest.zip&#34;&gt;commandlinetools-win-9862592_latest.zip&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.0&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;commandlinetools-mac-9477386_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-linux-9477386_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-win-9477386_latest.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.0&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;commandlinetools-mac-9123335_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-linux-9123335_latest.zip&lt;/td&gt;
&lt;td&gt;commandlinetools-win-9123335_latest.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;下载地址的生成规则：&lt;code&gt;https://dl.google.com/android/repository/文件名&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;JDK-对应-major-version&#34;&gt;&lt;a href=&#34;#JDK-对应-major-version&#34; class=&#34;headerlink&#34; title=&#34;JDK 对应 major version&#34;&gt;&lt;/a&gt;JDK 对应 major version&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Java SE 21 = 65 (0x41 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 20 = 64 (0x40 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 19 = 63 (0x3F hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 18 = 62 (0x3E hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(LTS) Java SE 17 = 61 (0x3D hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 16 = 60 (0x3C hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 15 = 59 (0x3B hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 14 = 58 (0x3A hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 13 = 57 (0x39 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 12 = 56 (0x38 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(LTS) Java SE 11 = 55 (0x37 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 10 = 54 (0x36 hex),[4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 9 = 53 (0x35 hex),[5]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(LTS) Java SE 8 = 52 (0x34 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 7 = 51 (0x33 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 6.0 = 50 (0x32 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java SE 5.0 = 49 (0x31 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JDK 1.4 = 48 (0x30 hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JDK 1.3 = 47 (0x2F hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JDK 1.2 = 46 (0x2E hex),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JDK 1.1 = 45 (0x2D hex).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;资料来源：&lt;a href=&#34;https://en.wikipedia.org/wiki/Java_class_file#General_layout&#34;&gt;Java class file&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;JDK-LTS-信息&#34;&gt;&lt;a href=&#34;#JDK-LTS-信息&#34; class=&#34;headerlink&#34; title=&#34;JDK LTS 信息&#34;&gt;&lt;/a&gt;JDK LTS 信息&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JDK 17(LTS)&lt;ul&gt;
&lt;li&gt;major version &amp;#x3D; 61&lt;/li&gt;
&lt;li&gt;积极支持：2026年9月30日&lt;/li&gt;
&lt;li&gt;安全支持：2029年9月30日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JDK 11(LTS)&lt;ul&gt;
&lt;li&gt;major version &amp;#x3D; 55&lt;/li&gt;
&lt;li&gt;积极支持：2023年9月30日&lt;/li&gt;
&lt;li&gt;安全支持：2026年9月30日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JDK 8(LTS)&lt;ul&gt;
&lt;li&gt;major version &amp;#x3D; 52&lt;/li&gt;
&lt;li&gt;积极支持：2022年3月31日&lt;/li&gt;
&lt;li&gt;安全支持：2030年12月31日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;资料来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://endoflife.date/java&#34;&gt;https://endoflife.date/java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/java-se-glance.html&#34;&gt;https://www.oracle.com/java/technologies/java-se-glance.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Mac" />
        <category term="Linux" />
        <category term="JDK" />
        <updated>2023-11-21T06:05:47.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2022/03/23/custom-view-know-on-pause-called/</id>
        <title>Android 必知必会：自定义 View 可以知道 onPause、onResume 被调用了吗？</title>
        <link rel="alternate" href="https://likfe.com/2022/03/23/custom-view-know-on-pause-called/"/>
        <content type="html">&lt;p&gt;关键词：自定义View、custom View、Lifecycle、onPause、onResume &lt;/p&gt;
&lt;p&gt;先说结论，可以。&lt;/p&gt;
&lt;p&gt;在自定义 View 的类中，根据手机系统版本，重写&lt;code&gt;onVisibilityChanged()&lt;/code&gt;或者&lt;code&gt;onVisibilityAggregated()&lt;/code&gt;方法即可。详细判断条件见下文。 &lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;如果 &lt;code&gt;Build.VERSION.SDK_INT &amp;lt; Build.VERSION_CODES.N&lt;/code&gt; （手机系统低于 Android 7.0）&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onVisibilityChanged&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@NonNull&lt;/span&gt; View changedView, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; visibility)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onVisibilityChanged(changedView, visibility);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (visibility == View.VISIBLE) &amp;#123; &lt;span class=&#34;comment&#34;&gt;//onResume() 被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;//处理动画播放、线程启动、开启定时任务等操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;// onPause() 被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//处理动画的暂停、取消或者线程的暂停、取消、定时任务的暂停、取消等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后 &lt;code&gt;Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.N&lt;/code&gt; （手机系统 Android 7.0 及以上）&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onVisibilityAggregated&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; isVisible)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onVisibilityAggregated(isVisible);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isVisible) &amp;#123; &lt;span class=&#34;comment&#34;&gt;//onResume() 被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;//处理动画播放、线程启动、开启定时任务等操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;// onPause() 被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//处理动画的暂停、取消或者线程的暂停、取消、定时任务的暂停、取消等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述方案是我翻 Android 源码找到的最简单的方式，灵感来自 &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/widget/ProgressBar.java&#34;&gt;ProgressBar&lt;/a&gt; 。不需要监听所在 Fragment 或者 Activity 的生命周期。&lt;/p&gt;
&lt;p&gt;其他方案参见：&lt;a href=&#34;https://stackoverflow.com/questions/22368720/can-a-custom-view-know-that-onpause-has-been-called&#34;&gt;Can a custom View know that onPause has been called?&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;更新：2023-02-16&lt;/p&gt;
&lt;p&gt;使用 Lifecycle 的方案中，除了直接通过 &lt;code&gt;addObserver()&lt;/code&gt; 来被动接收回调外，也可以在需要的地方使用 &lt;code&gt;Lifecycle.getCurrentState().isAtLeast(RESUMED)&lt;/code&gt; 方法来主动判断当前 Activity|Fragment 的状态。&lt;/p&gt;
&lt;p&gt;其中 Lifecycle 可以通过 Activity|Fragment 的 &lt;code&gt;getLifecycle()&lt;/code&gt; 方法获取，在 View 视角，Lifecycle 具备通用性，可以进行一定抽象。&lt;/p&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="View" />
        <updated>2022-03-23T15:04:35.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2021/03/09/android-forms-gle/</id>
        <title>Android 项目开发填坑记 - No Activity found to handle Intent</title>
        <link rel="alternate" href="https://likfe.com/2021/03/09/android-forms-gle/"/>
        <content type="html">&lt;p&gt;关键词：forms.gle、No Activity found to handle Intent&lt;/p&gt;
&lt;p&gt;前端同学说在 APP 内的 Webview 内不能跳转到 Google 表单的页面，但是在 iOS 里可以。&lt;/p&gt;
&lt;p&gt;日志是一个比较奇怪的报错：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android.content.ActivityNotFoundException: No Activity found to handle Intent &amp;#123; act=android.intent.action.VIEW dat=intent://forms.gle/xxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;要跳转的是 &lt;code&gt;https://forms.gle/xxxxxx&lt;/code&gt; 这种链接，尝试在 PC 浏览器中打开，发现会最终跳转到 &lt;code&gt;https://docs.google.com/forms/xxxxxxxx&lt;/code&gt; 的地方，可以正常打开。&lt;/p&gt;
&lt;p&gt;最后多次测试排查，发现是 &lt;code&gt;https://forms.gle/xxxxxx&lt;/code&gt; 这个链接，在 Android 的浏览器中打开，会显示如下错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/likfe/imagerepo/dev/img/20210309210242.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终定位到此链接在 Android 系统下的浏览器内会有特殊的逻辑，故&lt;strong&gt;让前端同学直接使用最终的跳转链接  &lt;code&gt;https://docs.google.com/forms/xxxxxxxx&lt;/code&gt; 来进行跳转&lt;/strong&gt;，就能正常打开了，特此记录。&lt;/p&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Google" />
        <updated>2021-03-09T12:36:40.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2020/05/01/android-umeng-messenger/</id>
        <title>友盟 SDK 分享到 Messenger 无法发送消息</title>
        <link rel="alternate" href="https://likfe.com/2020/05/01/android-umeng-messenger/"/>
        <content type="html">&lt;p&gt;友盟 Messenger 无法发送消息&lt;br&gt;umeng  Messenger 无法发送消息&lt;br&gt;umeng Facebook Messenger 无法发送消息&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;由于项目的登录和分享基于友盟进行的设计，接入 Facebook Messenger 分享，发出去的消息总是提示【无法发送消息 轻触了解详情】&lt;/p&gt;
&lt;p&gt;可能的原因有2点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Messenger 平台从 2019 年 6 月 10 日开始，&lt;strong&gt;新应用&lt;/strong&gt;将不再支持将应用中的链接和媒体分享至 Messenger 的功能，详见 &lt;a href=&#34;https://developers.facebook.com/docs/messenger-platform/changelog/#20190610&#34;&gt;官方公告&lt;/a&gt; ；(此条不成立，文章底部有更新)&lt;/li&gt;
&lt;li&gt;友盟分享 SDK 处理 Messenger 的相关代码比较老旧，新应用使用的话不再被官方接受了，也就不能发送成功。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;既然官方都发公告说不支持将应用中的链接和媒体分享至 Messenger 的功能了，那就真的没办法了吗? 经过测试，虽然有些限制，但还是可以直接将应用中的&lt;strong&gt;链接&lt;/strong&gt;分享至 Messenger 的，至于媒体，没有进行单独测试，理论上可行。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a href=&#34;#解决方案&#34; class=&#34;headerlink&#34; title=&#34;解决方案&#34;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;简单点来说就是&lt;strong&gt;调用 Facebook 官方最新 SDK 里的方法进行分享&lt;/strong&gt;。&lt;br&gt;代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; com.facebook.share.model.ShareLinkContent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; com.facebook.share.widget.MessageDialog;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//限制就是不能设置标题、描述等字段了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ShareLinkContent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ShareLinkContent&lt;/span&gt;.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        .setContentUrl(Uri.parse(&lt;span class=&#34;string&#34;&gt;&amp;quot;https://xxx.xxx/xxx&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//不需要回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MessageDialog.show(context, content);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//需要回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;MessageDialog&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;messageDialog&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MessageDialog&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;messageDialog.registerCallback(CallbackManager.Factory.create(), &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;com&lt;/span&gt;.facebook.FacebookCallback&amp;lt;com.facebook.share.Sharer.Result&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onSuccess&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(com.facebook.share.Sharer.Result result)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCancel&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onError&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(com.facebook.FacebookException error)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;messageDialog.show(content);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么问题来了，怎么和友盟的 SDK 进行结合呢？毕竟如果项目的整个分享模块都是基于友盟来设计的话，必须要在它这个体系内才行。&lt;/p&gt;
&lt;p&gt;另外，通过粗略的阅读友盟分享 SDK 的相关逻辑，好像并没有提供自定义分享渠道的逻辑，分享渠道的处理类  &lt;code&gt;UMxxHandler&lt;/code&gt;  (xx 指分享渠道，比如 &lt;code&gt;UMLineHandler&lt;/code&gt; 是 Line 分享渠道的处理类) 又很多是写死在源码里的，是否能调用到 &lt;code&gt;onActivityResult&lt;/code&gt; 也是预先写死的，这就很难受了。&lt;/p&gt;
&lt;p&gt;我这里提供一个简单的思路：重写某个用不到的分享渠道的 &lt;code&gt;UMxxHandler&lt;/code&gt; 来实现。&lt;/p&gt;
&lt;p&gt;如果也需要调用到 &lt;code&gt;onActivityResult&lt;/code&gt;  来进行分享结果的回调处理，那需要把所有的分享渠道的代码看一下，看看哪些有覆写了 &lt;code&gt;getRequestCode()&lt;/code&gt; 和 &lt;code&gt;onActivityResult()&lt;/code&gt;方法，即有分享结果回调处理逻辑，挑一个用不到的分享渠道，然后去覆写它的 &lt;code&gt;share()&lt;/code&gt; 方法来进行具体的分享操作。&lt;/p&gt;
&lt;p&gt;博主选了 &lt;code&gt;UMFlickrHandler&lt;/code&gt; 进行了重写，它没有处理回调的情况。Messenger 本身分享出去也是无法区分成功和取消，博主便稍微偷个懒，选个不需要处理回调的。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;友盟的 SDK 吧，一言难尽，鉴于项目过于依赖它（登录、分享、Push模块），暂时只能选择继续用着。这里趁机也提示一下，它的 Line 分享功能也是有 Bug 的，有空再写吧。&lt;/p&gt;
&lt;p&gt;今天五一了，祝大家代码日日精进。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更新于 20200503 &lt;a href=&#34;https://developers.facebook.com/docs/messenger-platform/changelog/&#34;&gt;Messenger 平台更新日志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通读了一下更新日志，发现 2020 年 3 月 4 日 Messenger 平台又重新支持将应用中的链接和媒体分享至 Messenger 的功能了，详细内容如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2020 年 3 月 4 日&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Messenger 平台公告&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://developers.facebook.com/docs/messenger-platform/webhook/versioning&#34;&gt;推出 Messenger Webhook Versioning&lt;/a&gt;&lt;/strong&gt; - 允许提供一个窗口，让开发者能够选择加入影响 Webhook 的平台更改。可以实时完成版本更改，并在需要时回滚到之前版本，促成顺畅迁移。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://developers.facebook.com/docs/sharing/messenger/&#34;&gt;分享到 Messenger SDK 的最新情况&lt;/a&gt;&lt;/strong&gt; - 去年六月，我们宣布了不再支持分享到 Messenger SDK 的计划。我们很高兴与大家分享，我们将继续支持分享到 Messenger SDK 的修改版本，该版本将允许用户将您应用程序中的链接和照片分享到 Messenger。我们将在未来几周内逐步推出适用于 iOS 版 Messenger 应用链接和图像&amp;#x2F;视频分享的支持。我们将不再支持分享常规和多媒体素材的模板。如果您的应用中仍包含此 SDK，则无需采取任何操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Messenger" />
        <updated>2020-05-01T11:51:51.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2020/04/22/android-recycleview-log-resume-position/</id>
        <title>Android必知必会 - RecyclerView 恢复上次滚动位置</title>
        <link rel="alternate" href="https://likfe.com/2020/04/22/android-recycleview-log-resume-position/"/>
        <content type="html">&lt;p&gt;记录 RecyclerView 滚动位置并恢复是一个很常见的需求，通常需要精准恢复到上次的位置。&lt;/p&gt;
&lt;p&gt;预计会用到 RecyclerView 相关的三个知识点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;监听 RecyclerView 滚动状态&lt;/li&gt;
&lt;li&gt;监听 RecyclerView 完成绘制&lt;/li&gt;
&lt;li&gt;滚动 RecyclerView 到指定的位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在「RecyclerView 完成绘制」时，记录首个元素的偏移量作为基础偏移量；此步非必须流程，根据自己实际情况看是否需要，有些情况此基础偏移量为0，即不存在基础偏移量的问题；&lt;/li&gt;
&lt;li&gt;在「监听 RecyclerView 滚动状态」里，滚动结束时，记录最左侧的元素坐标和偏移量；&lt;/li&gt;
&lt;li&gt;再次打开当前页面时，检查是否存在偏移量信息的记录，有则进行位置恢复，即「滚动 RecyclerView 到指定的位置」。&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;条件：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LinearLayoutManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;linearLayoutManager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LinearLayoutManager&lt;/span&gt;(mContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL); &lt;span class=&#34;comment&#34;&gt;// 水平，本文以此为例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL); &lt;span class=&#34;comment&#34;&gt;//或 垂直&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//以下3个变量的值需要持久化存储到 SharedPreferences 类似的地方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rvBaseOffset; &lt;span class=&#34;comment&#34;&gt;//初始状态时position=0元素的的基础偏移量 Offset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rvPosition; &lt;span class=&#34;comment&#34;&gt;//最左边首个可见元素的 position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rvOffset; &lt;span class=&#34;comment&#34;&gt;//最左边首个可见元素的偏移量 Offset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;1-前置知识&#34;&gt;&lt;a href=&#34;#1-前置知识&#34; class=&#34;headerlink&#34; title=&#34;1. 前置知识&#34;&gt;&lt;/a&gt;1. 前置知识&lt;/h2&gt;&lt;h3 id=&#34;监听-RecyclerView-滚动状态&#34;&gt;&lt;a href=&#34;#监听-RecyclerView-滚动状态&#34; class=&#34;headerlink&#34; title=&#34;监听 RecyclerView 滚动状态&#34;&gt;&lt;/a&gt;监听 RecyclerView 滚动状态&lt;/h3&gt;&lt;p&gt;调用 &lt;code&gt;recyclerView.addOnScrollListener(onScrollListener);&lt;/code&gt; 来设置 RecyclerView 的滚动监听器。&lt;/p&gt;
&lt;p&gt;自定义一个类来继承 &lt;code&gt;RecyclerView.OnScrollListener&lt;/code&gt; 并覆写 &lt;code&gt;onScrollStateChanged()&lt;/code&gt; 方法，在其中处理关键状态的监听。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MOnScrollListener&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;RecyclerView&lt;/span&gt;.OnScrollListener &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onScrollStateChanged&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@NonNull&lt;/span&gt; RecyclerView recyclerView, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; newState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onScrollStateChanged(recyclerView, newState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;hasStarted&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; newState == RecyclerView.SCROLL_STATE_DRAGGING; &lt;span class=&#34;comment&#34;&gt;//此时，RecyclerView 滚动开始&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;hasEnded&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; newState == RecyclerView.SCROLL_STATE_IDLE; &lt;span class=&#34;comment&#34;&gt;//此时，RecyclerView 滚动结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hasEnded &amp;amp;&amp;amp; linearLayoutManager != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;leftView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; linearLayoutManager.getChildAt(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//获取可视的第一个view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (leftView == &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rvOffset = leftView.getLeft(); &lt;span class=&#34;comment&#34;&gt;//获取该view的左边的偏移量，垂直布局时获取 getTop()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rvPosition = linearLayoutManager.getPosition(leftView);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      SPManager.getInstance().setRvOffset(rvOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      SPManager.getInstance().setRvPosition(rvPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;监听-RecyclerView-完成绘制&#34;&gt;&lt;a href=&#34;#监听-RecyclerView-完成绘制&#34; class=&#34;headerlink&#34; title=&#34;监听 RecyclerView 完成绘制&#34;&gt;&lt;/a&gt;监听 RecyclerView 完成绘制&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;recyclerView.getViewTreeObserver()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    .addOnGlobalLayoutListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ViewTreeObserver&lt;/span&gt;.OnGlobalLayoutListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onGlobalLayout&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;leftView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; linearLayoutManager.getChildAt(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//获取可视的第一个view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (leftView == &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rvBaseOffset = leftView.getLeft();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lastPosition&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; linearLayoutManager.getPosition(leftView);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (lastPosition == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      SPManager.getInstance().setRvBaseOffset(rvBaseOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    recyclerView.getViewTreeObserver().removeOnGlobalLayoutListener(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;滚动-RecyclerView-到指定的位置&#34;&gt;&lt;a href=&#34;#滚动-RecyclerView-到指定的位置&#34; class=&#34;headerlink&#34; title=&#34;滚动 RecyclerView 到指定的位置&#34;&gt;&lt;/a&gt;滚动 RecyclerView 到指定的位置&lt;/h3&gt;&lt;p&gt;具有类似功能的 API 有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RecyclerView.scrollToPosition(int position)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RecyclerView.smoothScrollToPosition(int position)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RecyclerView.scrollBy(int x, int y)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinearLayoutManager.scrollToPositionWithOffset(int position, int offset)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意不同 API 是不同的类的方法，另外还有使用有滚动动画的区别等。&lt;/p&gt;
&lt;p&gt;这里使用 &lt;code&gt;LinearLayoutManager.scrollToPositionWithOffset(int position, int offset)&lt;/code&gt; ，它可以精准的定位到上次的位置，也不需要展示滚动动画。&lt;/p&gt;
&lt;h2 id=&#34;2-代码实现&#34;&gt;&lt;a href=&#34;#2-代码实现&#34; class=&#34;headerlink&#34; title=&#34;2. 代码实现&#34;&gt;&lt;/a&gt;2. 代码实现&lt;/h2&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LinearLayoutManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;linearLayoutManager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LinearLayoutManager&lt;/span&gt;(getContext());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;recyclerView.setLayoutManager(linearLayoutManager);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onScrollListener = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MOnScrollListener&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;recyclerView.addOnScrollListener(onScrollListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lastPositionHistory&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SPManager.getInstance().getRvPosition();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (lastPositionHistory == -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123; &lt;span class=&#34;comment&#34;&gt;//从未设置过偏移位置时获取一次基础偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  recyclerView.getViewTreeObserver()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    .addOnGlobalLayoutListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ViewTreeObserver&lt;/span&gt;.OnGlobalLayoutListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onGlobalLayout&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;leftView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; linearLayoutManager.getChildAt(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//获取可视的第一个view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (leftView == &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rvBaseOffset = leftView.getLeft();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lastPosition&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; linearLayoutManager.getPosition(leftView);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (lastPosition == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      SPManager.getInstance().setRvBaseOffset(rvBaseOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    recyclerView.getViewTreeObserver().removeOnGlobalLayoutListener(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//在合适的时机，比如 onResume() 或者获取完数据后进行位置恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (linearLayoutManager != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; recyclerView != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lastPosition&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SPManager.getInstance().getRvPositiont();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (lastPosition &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; linearLayoutManager != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lastOffset&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SPManager.getInstance().getRvOffset();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;baseOffset&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SPManager.getInstance().getRvBaseOffset();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    linearLayoutManager.scrollToPositionWithOffset(lastPosition, lastOffset - baseOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;3-回顾总结&#34;&gt;&lt;a href=&#34;#3-回顾总结&#34; class=&#34;headerlink&#34; title=&#34;3. 回顾总结&#34;&gt;&lt;/a&gt;3. 回顾总结&lt;/h2&gt;&lt;p&gt;本次记录的是实际使用中的情况，基础偏移量的值不为 0 可能不是普遍现象，没看到过相关记录，特记录下来，避免后人踩坑吧。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/34271773/how-to-scrollto-an-offset-inside-recyclerview&#34;&gt;How to scrollto an offset inside recyclerview?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/27507715/android-how-to-get-the-current-x-offset-of-recyclerview&#34;&gt;Android: How to get the current X offset of RecyclerView?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/34271773/how-to-scrollto-an-offset-inside-recyclerview&#34;&gt;How to scrollto an offset inside recyclerview?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/30397460/how-to-know-when-the-recyclerview-has-finished-laying-down-the-items&#34;&gt;How to know when the RecyclerView has finished laying down the items?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="RecyclerView" />
        <updated>2020-04-22T12:34:19.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2020/04/10/androd-rgba-to-argb/</id>
        <title>Android 下 RGBA 转 ARGB</title>
        <link rel="alternate" href="https://likfe.com/2020/04/10/androd-rgba-to-argb/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;服务端下发的颜色值字符串由于一开始依据 iOS 端的 RGBA 格式，Android 端（Android 使用 ARGB 方式）需要进行兼容，需要对此字符串转换。&lt;br&gt;举例：RGBA &lt;code&gt;#ABCDEF99&lt;/code&gt; &amp;#x3D;&amp;gt; ARGB &lt;code&gt;#99ABCDEF&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;扩展：ARGB &lt;code&gt;#99ABCDEF&lt;/code&gt; &amp;#x3D;&amp;gt; RGBA &lt;code&gt;#ABCDEF99&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即 RGBA 和 ARGB 互转。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;方式&#34;&gt;&lt;a href=&#34;#方式&#34; class=&#34;headerlink&#34; title=&#34;方式&#34;&gt;&lt;/a&gt;方式&lt;/h2&gt;&lt;h3 id=&#34;①-字符串截取和组合&#34;&gt;&lt;a href=&#34;#①-字符串截取和组合&#34; class=&#34;headerlink&#34; title=&#34;① 字符串截取和组合&#34;&gt;&lt;/a&gt;① 字符串截取和组合&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;argbStr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; rgba.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + rgba.substring(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;) + rgba.substring(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;argb&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(argbStr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;②-转为Char数组，遍历重组&#34;&gt;&lt;a href=&#34;#②-转为Char数组，遍历重组&#34; class=&#34;headerlink&#34; title=&#34;② 转为Char数组，遍历重组&#34;&gt;&lt;/a&gt;② 转为Char数组，遍历重组&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;[] chars = rgba.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;tempStr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;StringBuilder&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; chars.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tempStr.append(chars[i - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;argb&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(tempStr.toString());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;③位操作&#34;&gt;&lt;a href=&#34;#③位操作&#34; class=&#34;headerlink&#34; title=&#34;③位操作&#34;&gt;&lt;/a&gt;③位操作&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rgba&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(rgbaStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;argb&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (rgba &amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) | (rgba &amp;lt;&amp;lt; (&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;br&gt;&lt;code&gt;rgbaStr&lt;/code&gt; 字符的长度为 9 的时候，才需要转换，7 位时只有RGB色值，直接使用 &lt;code&gt;Color.parseColor()&lt;/code&gt;  即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Color.parseColor()&lt;/code&gt;  使用注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可能会抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 的异常，使用时可以进行一层封装，对异常进行捕获并记录日志，出现异常时返回一个预设的颜色值。&lt;/li&gt;
&lt;li&gt;未做非空判断，可以先判空处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;扩展：ARGB-转-RGBA&#34;&gt;&lt;a href=&#34;#扩展：ARGB-转-RGBA&#34; class=&#34;headerlink&#34; title=&#34;扩展：ARGB 转 RGBA&#34;&gt;&lt;/a&gt;扩展：ARGB 转 RGBA&lt;/h2&gt;&lt;p&gt;以下算法临时改写而成，未经实际产品应用，&lt;strong&gt;建议先跑一些测试用例进行验证&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1. 字符串截取+拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String argbTemp= argbStr.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + argbStr.substring(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;) + argbStr.substring(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rgba&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(argbTemp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 2. 转为Char数组，遍历重组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;[] chars = argbStr.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;tempStr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;StringBuilder&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; chars.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tempStr.append(chars[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tempStr.append(chars[i + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rgba&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(tempStr.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 3. 位操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;argb&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Color.parseColor(argbStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rgba&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (argb &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) | (argb &amp;gt;&amp;gt;&amp;gt; (&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;https://micro.blog.csdn.net/&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;掘金：&lt;a href=&#34;https://juejin.im/user/56042f4b60b2f3a91f58461d&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2020-04-10T15:00:12.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2018/02/09/android-arraycopy-error/</id>
        <title>Android 项目开发填坑记 - NoSuchMethodError:(java.lang.System.arraycopy)</title>
        <link rel="alternate" href="https://likfe.com/2018/02/09/android-arraycopy-error/"/>
        <content type="html">&lt;p&gt;关键字：&lt;code&gt;NoSuchMethodError&lt;/code&gt;、&lt;code&gt;System.arraycopy&lt;/code&gt;、&lt;code&gt;Native Method&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;0x00：奇怪的异常&#34;&gt;&lt;a href=&#34;#0x00：奇怪的异常&#34; class=&#34;headerlink&#34; title=&#34;0x00：奇怪的异常&#34;&gt;&lt;/a&gt;0x00：奇怪的异常&lt;/h3&gt;&lt;p&gt;应用新版本上线后观察错误日志，发现一个奇怪的 Crash 异常信息：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;lang.java.NoSuchMethodError: (java.lang.System.arraycopy)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;异常集中发生在 Android 4.4.2 和 Android 5.1 上面，&lt;code&gt;System.arraycopy()&lt;/code&gt; 是一个系统函数，要说没这个方法倒是不会，但异常发生了，说明应用在找这个方法时发生了错误。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h3 id=&#34;0x01：探究原因&#34;&gt;&lt;a href=&#34;#0x01：探究原因&#34; class=&#34;headerlink&#34; title=&#34;0x01：探究原因&#34;&gt;&lt;/a&gt;0x01：探究原因&lt;/h3&gt;&lt;p&gt;根据异常日志，追踪到 &lt;code&gt;System.arraycopy()&lt;/code&gt; 是 &lt;a href=&#34;http://iharder.sourceforge.net/current/java/base64/&#34;&gt;Base64.java&lt;/a&gt; 的 &lt;code&gt;public static byte[] decode(byte[] source, int off, int len, int options) &lt;/code&gt;  方法里调用的。&lt;/p&gt;
&lt;p&gt;经过查找 Android API 19~21 的系统源码，发现发生此问题的原因是 Android&amp;gt;&amp;#x3D;21 时，&lt;code&gt;java.lang.System.arraycopy()&lt;/code&gt; 多了几个重载。&lt;/p&gt;
&lt;p&gt;在 Android &amp;lt;&amp;#x3D;20 上：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//java.lang.System 只有一个 arraycopy 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;native&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;arraycopy&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object src, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; srcPos,Object dst, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dstPos, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; length)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 Android &amp;gt;&amp;#x3D;21 上：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//java.lang.System&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;native&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;arraycopy&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object src, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; srcPos,Object dst, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dstPos, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; length)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * The byte[] specialized version of arraycopy().&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@hide&lt;/span&gt; internal use only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;arraycopy&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] src, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; srcPos, &lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] dst, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dstPos, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; length)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Base64.java&lt;/strong&gt; 应该使用的是 &lt;code&gt;native void arraycopy(Object src...&lt;/code&gt; ，但是会在  &lt;code&gt;compileSdkVersion&amp;gt;=21&lt;/code&gt; 时使用重载的 &lt;code&gt;arraycopy(byte[] src …&lt;/code&gt; ，那么运行在  Android &amp;lt;&amp;#x3D;20 的手机上时就会报  &lt;code&gt;java.lang.NoSuchMethodError&lt;/code&gt;  的异常了。&lt;/p&gt;
&lt;p&gt;总结下来就是：如果你在 Android 上使用了此 &lt;a href=&#34;http://iharder.sourceforge.net/current/java/base64/&#34;&gt;Base64&lt;/a&gt; 工具类，并且编译时使用的 Android 版本&amp;gt;&amp;#x3D;21，那么在低版本上你&lt;strong&gt;可能&lt;/strong&gt;会遇到 &lt;code&gt;java.lang.NoSuchMethodError: java.lang.System.arraycopy&lt;/code&gt; 的异常。之所以说是可能，是因为出现此异常时在开发平常的应用时不会发生，一般是使用修改后的系统 Jar 包调用系统隐藏方法时才容易出现。&lt;/p&gt;
&lt;h3 id=&#34;0x02：解决方案&#34;&gt;&lt;a href=&#34;#0x02：解决方案&#34; class=&#34;headerlink&#34; title=&#34;0x02：解决方案&#34;&gt;&lt;/a&gt;0x02：解决方案&lt;/h3&gt;&lt;p&gt;如何解决呢？有两个方法：&lt;/p&gt;
&lt;p&gt;1.指定使用 arraycopy 使用的重载方法，避免编译器用错&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;System.arraycopy(outBuff, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, out, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, outBuffPosn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//替换成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.arraycopy((Object) outBuff, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, (Object) out, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, outBuffPosn);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2.使用 &lt;code&gt;Arrays.copyOf ()&lt;/code&gt; 来替代 &lt;code&gt;System.arraycopy()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;System.arraycopy(outBuff, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, out, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, outBuffPosn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//替换成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;out = Arrays.copyOf(outBuff, outBuffPosn);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;虽然 &lt;code&gt;Arrays.copyOf()&lt;/code&gt; 的方法实现最后还是调用的 &lt;code&gt;System.arraycopy()&lt;/code&gt; ，但是不会调用到错误的重载方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：你可以通过下面的方式和我联系&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2018-02-09T08:23:29.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2018/01/17/android-adb-set-clipboard/</id>
        <title>Android 必知必会 - 使用 ADB 操作 Clipboard</title>
        <link rel="alternate" href="https://likfe.com/2018/01/17/android-adb-set-clipboard/"/>
        <content type="html">&lt;p&gt;关键词：&lt;code&gt;service call&lt;/code&gt; 、&lt;code&gt;clipboard&lt;/code&gt; 、&lt;code&gt;Unknown package&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手里一个项目需要执行个骚操作，其中有一个步骤是使用 ADB 来操作 Clipboard（粘贴板），搜索许久发现&lt;strong&gt;直接操作并不可行&lt;/strong&gt;，确切的说是在 Android API &amp;gt;&amp;#x3D;11 时是不可行的。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;blockquote&gt;
&lt;p&gt;操作环境：macOS Sierra 10.12.6 + iTerm2，一些命令可能会因系统等不同而略有不同，请自行测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前置知识点&#34;&gt;&lt;a href=&#34;#前置知识点&#34; class=&#34;headerlink&#34; title=&#34;前置知识点&#34;&gt;&lt;/a&gt;前置知识点&lt;/h2&gt;&lt;p&gt;首先了解下 ADB Shell 中的 &lt;code&gt;service&lt;/code&gt; ，在命令行里执行能看到如下信息：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ adb shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Usage: service [-h|-?]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       service list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       service check SERVICE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       service call SERVICE CODE [i32 N | i64 N | f N | d N | s16 STR ] ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Options:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   i32: Write the 32-bit &lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt; N into the send parcel.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   i64: Write the 64-bit &lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt; N into the send parcel.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f:   Write the 32-bit single-precision number N into the send parcel.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   d:   Write the 64-bit double-precision number N into the send parcel.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   s16: Write the UTF-16 string STR into the send parcel.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ service list | grep clipboard&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# If use windows system, use findstr: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# service list | findstr &amp;quot;clipboard&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63	clipboard: [android.content.IClipboard]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面找 CODE ，查看 Clipboard 的源码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// API &amp;lt; 11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; TRANSACTION_getClipboardText &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; TRANSACTION_hasClipboardText &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; TRANSACTION_setClipboardText &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// API &amp;gt;= 11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_setPrimaryClip&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_getPrimaryClip&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_getPrimaryClipDescription&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_hasPrimaryClip&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_addPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_removePrimaryClipChangedListener&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;TRANSACTION_hasClipboardText&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;分析&#34;&gt;&lt;a href=&#34;#分析&#34; class=&#34;headerlink&#34; title=&#34;分析&#34;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;Clipboard 源码指出这些事务需要什么参数。TRANSACTION_setPrimaryClip 需要一个 ClipData，它不是一个 i32 或 s16，因此与服务调用不兼容。 更重要的是，这些事务需要调用包名称作为参数，剪贴板服务验证指定的包名称与调用的 uid 相匹配。 当使用adb shell 时，调用的 uid 是 UID_ROOT 或者 UID_SHELL，它们都不拥有任何包，所以没有办法通过这个检查。 简而言之，新的剪贴板服务不能以这种方式使用。&lt;/p&gt;
&lt;p&gt;所以在 API &amp;gt;&amp;#x3D; 11 的系统上使用 &lt;code&gt;service call clipboard [1 | 2 | 3] [i32 N | i64 N | f N | d N | s16 STR ]&lt;/code&gt; 已经不可行了。&lt;/p&gt;
&lt;p&gt;所以无论命令正确与否，都会提示 &lt;code&gt;Unknown package&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ service call clipboard 2 s16 &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Result: Parcel(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x00000000: fffffffd 00000013 006e0055 006e006b &lt;span class=&#34;string&#34;&gt;&amp;#x27;........U.n.k.n.&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x00000010: 0077006f 0020006e 00610070 006b0063 &lt;span class=&#34;string&#34;&gt;&amp;#x27;o.w.n. .p.a.c.k.&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x00000020: 00670061 00200065 00620061 00000063 &lt;span class=&#34;string&#34;&gt;&amp;#x27;a.g.e. .a.b.c...&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;就 Android 目前的各版本系统市场占有率而言，&lt;strong&gt;使用 ADB 操作 Clipboard 是一个不可行的方案了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/7283446/pasting-text-into-android-emulator-clipboard-using-adb-shell&#34;&gt;Pasting text into Android emulator clipboard using adb shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/14243427/set-clipboard-text-via-adb-shell-as-of-api-level-11&#34;&gt;Set clipboard text via adb shell as of API level 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="ADB" />
        <category term="Clipboard" />
        <updated>2018-01-17T02:52:38.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/10/09/android-usermode/</id>
        <title>Android 必知必会 - 获取手机系统的构建模式</title>
        <link rel="alternate" href="https://likfe.com/2017/10/09/android-usermode/"/>
        <content type="html">&lt;p&gt;关键词：&lt;code&gt;Android&lt;/code&gt; 、&lt;code&gt;Make&lt;/code&gt; 、&lt;code&gt; user mode&lt;/code&gt; 、&lt;code&gt;user&lt;/code&gt; 、&lt;code&gt;userdebug&lt;/code&gt; 、&lt;code&gt;eng&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;判定手机系统的构建模式、用户模式&lt;/p&gt;
&lt;p&gt;编译 Rom 时，需要指定目标构建模式，构建模式有三种：用户模式 user、用户调试模式 userdebug 和工程模式 eng&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;



&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;用户模式 user&lt;ul&gt;
&lt;li&gt;仅安装标签为 user 的模块&lt;/li&gt;
&lt;li&gt;设定属性 ro.secure&amp;#x3D;1，打开安全检查功能&lt;/li&gt;
&lt;li&gt;设定属性 ro.debuggable&amp;#x3D;0，关闭应用调试功能&lt;/li&gt;
&lt;li&gt;默认关闭 adb 功能&lt;/li&gt;
&lt;li&gt;打开 Proguard 混淆器&lt;/li&gt;
&lt;li&gt;打开 DEXPREOPT 预先编译优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用户调试模式 userdebug&lt;ul&gt;
&lt;li&gt;安装标签为 user、debug 的模块&lt;/li&gt;
&lt;li&gt;设定属性 ro.secure&amp;#x3D;1，打开安全检查功能&lt;/li&gt;
&lt;li&gt;设定属性 ro.debuggable&amp;#x3D;1，启用应用调试功能&lt;/li&gt;
&lt;li&gt;默认打开 adb 功能&lt;/li&gt;
&lt;li&gt;打开 Proguard 混淆器&lt;/li&gt;
&lt;li&gt;打开 DEXPREOPT 预先编译优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;工程模式 eng&lt;ul&gt;
&lt;li&gt;安装标签为 user、debug、eng 的模块&lt;/li&gt;
&lt;li&gt;设定属性 ro.secure&amp;#x3D;0，关闭安全检查功能&lt;/li&gt;
&lt;li&gt;设定属性 ro.debuggable&amp;#x3D;1，启用应用调试功能&lt;/li&gt;
&lt;li&gt;设定属性 ro.kernel.android.checkjni&amp;#x3D;1，启用 JNI 调用检查&lt;/li&gt;
&lt;li&gt;默认打开 adb 功能&lt;/li&gt;
&lt;li&gt;关闭 Proguard 混淆器&lt;/li&gt;
&lt;li&gt;关闭 DEXPREOPT 预先编译优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指定目标构建模式：在 &lt;code&gt;make&lt;/code&gt; 命令中加入参数&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ sudo make -j8 PRODUCT-rk312x-user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ sudo make -j8 PRODUCT-rk312x-userdebug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ sudo make -j8 PRODUCT-rk312x-eng&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来源：&lt;a href=&#34;https://www.kancloud.cn/amoy0226/fireprime_android_compile/105885&#34;&gt;https://www.kancloud.cn/amoy0226/fireprime_android_compile/105885&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;判断构建模式&#34;&gt;&lt;a href=&#34;#判断构建模式&#34; class=&#34;headerlink&#34; title=&#34;判断构建模式&#34;&gt;&lt;/a&gt;判断构建模式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;思路&lt;/strong&gt;：通过观察以上三个模式的属性，这里使用安全检查功能（ro.securero）和应用调试功能（ro.debuggable）两个属性来区分这三个模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user：&lt;ul&gt;
&lt;li&gt;ro.securero &amp;#x3D; 1&lt;/li&gt;
&lt;li&gt;ro.debuggable &amp;#x3D; 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;userdebug&lt;ul&gt;
&lt;li&gt;ro.securero &amp;#x3D; 1&lt;/li&gt;
&lt;li&gt;ro.debuggable &amp;#x3D; 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eng&lt;ul&gt;
&lt;li&gt;ro.securero &amp;#x3D; 0&lt;/li&gt;
&lt;li&gt;ro.debuggable &amp;#x3D; 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，如果只需判断是否为 user 模式，使用 ro.debuggable 一个属性即可。&lt;/p&gt;
&lt;h3 id=&#34;寻找源码&#34;&gt;&lt;a href=&#34;#寻找源码&#34; class=&#34;headerlink&#34; title=&#34;寻找源码&#34;&gt;&lt;/a&gt;寻找源码&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;android.os.Build&lt;/code&gt; 的源码中我发现一个静态变量：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * Returns true if we are running a debug build such as &amp;quot;user-debug&amp;quot; or &amp;quot;eng&amp;quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@hide&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;IS_DEBUGGABLE&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SystemProperties.getInt(&lt;span class=&#34;string&#34;&gt;&amp;quot;ro.debuggable&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是没有 &lt;code&gt;ro.securero&lt;/code&gt; 这个属性，进一步发现其调用的是 &lt;code&gt;android.os.SystemProperties&lt;/code&gt; 的 &lt;code&gt;getInt()&lt;/code&gt;  函数，那可以直接使用它来获取  &lt;code&gt;ro.securero&lt;/code&gt; 的值。&lt;/p&gt;
&lt;p&gt;由于是 &lt;code&gt;android.os.SystemProperties&lt;/code&gt; 是隐藏类，我们可以使用两种方式来调用其方法：&lt;/p&gt;
&lt;p&gt;方法一：使用修改过增加了这些隐藏类的 android.jar 来编译 APK，此方式问题较多，配置繁琐，不推荐；&lt;/p&gt;
&lt;p&gt;方法二：使用反射调用，普通 App 即可使用，无限制，推荐使用此方法。&lt;/p&gt;
&lt;h3 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h3&gt;&lt;p&gt;先说下方法一下的实现：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 获取系统构建模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; int（0:未知, 1 user, 2 userdebug, 3 eng）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getOSMode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SystemProperties.getInt(&lt;span class=&#34;string&#34;&gt;&amp;quot;ro.debuggable&amp;quot;&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;secure&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SystemProperties.getInt(&lt;span class=&#34;string&#34;&gt;&amp;quot;ro.secure&amp;quot;&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么方法二只是和方法一的属性获取方式不一样：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 获取系统构建模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; int（0:未知, 1 user, 2 userdebug, 3 eng）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getOSMode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;Class&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;clazz&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Class.forName(&lt;span class=&#34;string&#34;&gt;&amp;quot;android.os.SystemProperties&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;) clazz.getMethod(&lt;span class=&#34;string&#34;&gt;&amp;quot;getInt&amp;quot;&lt;/span&gt;, String.class, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;.class).invoke(clazz, &lt;span class=&#34;string&#34;&gt;&amp;quot;ro.debuggable&amp;quot;&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;secure&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;) clazz.getMethod(&lt;span class=&#34;string&#34;&gt;&amp;quot;getInt&amp;quot;&lt;/span&gt;, String.class, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;.class).invoke(clazz, &lt;span class=&#34;string&#34;&gt;&amp;quot;ro.secure&amp;quot;&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (debug == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; secure == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (ClassNotFoundException ignore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (NoSuchMethodException ignore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (IllegalAccessException ignore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InvocationTargetException ignore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里未对反射时可能产生的异常做处理，只是简单的返回 0，有需要请自行处理。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;&lt;code&gt;android.os.Build&lt;/code&gt; 和  &lt;code&gt;android.os.SystemProperties&lt;/code&gt; 的源码在 Android SDK 中，很方便寻找，比较困难的一步就是了解到所需的属性和这两个类有关，这就需要对 Android Rom 的编译有一点了解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：如果有什么建议或者问题，可以通过下面的方式和我联系&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Make" />
        <updated>2017-10-09T10:38:58.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/08/30/android-is-intent-available/</id>
        <title>Android 必知必会 - 使用 Intent 打开第三方应用及验证可用性</title>
        <link rel="alternate" href="https://likfe.com/2017/08/30/android-is-intent-available/"/>
        <content type="html">&lt;p&gt;本文主要记录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Intent 打开第三方应用或指定 Activity 的三种方式&lt;/li&gt;
&lt;li&gt;使用上面三种方式时分别如何判断该 Intent 能否被解析&lt;/li&gt;
&lt;li&gt;判断该 Intent 能否被解析中可能出现的遗漏&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;基础知识&#34;&gt;&lt;a href=&#34;#基础知识&#34; class=&#34;headerlink&#34; title=&#34;基础知识&#34;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h3 id=&#34;1-App-的入口-Activity-与其-icon&#34;&gt;&lt;a href=&#34;#1-App-的入口-Activity-与其-icon&#34; class=&#34;headerlink&#34; title=&#34;1. App 的入口 Activity 与其 icon&#34;&gt;&lt;/a&gt;1. App 的入口 Activity 与其 icon&lt;/h3&gt;&lt;p&gt;一个普通的应用默认会有一个入口 Activity，它在 AndroidManifest.xml 中一般这样写：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;activity&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;android:name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;.MainActivity&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;action&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;android:name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;android.intent.action.MAIN&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;category&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;android:name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;android.intent.category.LAUNCHER&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;activity&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;只有配置了一个这样的 Activity，这个应用才会点击的时候知道启动哪个 Activity，如果把 &lt;code&gt;category&lt;/code&gt; 的值修改为 &lt;code&gt;android.intent.category.DEFAULT&lt;/code&gt; 那么，这个应用将在桌面看不到 icon，无法直接打开了。&lt;/p&gt;
&lt;h2 id=&#34;使用-Intent-打开第三方应用或指定-Activity-的方式&#34;&gt;&lt;a href=&#34;#使用-Intent-打开第三方应用或指定-Activity-的方式&#34; class=&#34;headerlink&#34; title=&#34;使用 Intent 打开第三方应用或指定 Activity 的方式&#34;&gt;&lt;/a&gt;使用 Intent 打开第三方应用或指定 Activity 的方式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;只知道包名 - 需要有默认的入口 Activity&lt;/li&gt;
&lt;li&gt;启动指定第三方应用的 Activity - 需要包名和 Activity 名，且该 Activity 的 &lt;code&gt;Export=“true”&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;隐式启动第三方应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-使用-PackageManager-getLaunchIntentForPackage&#34;&gt;&lt;a href=&#34;#1-使用-PackageManager-getLaunchIntentForPackage&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 PackageManager.getLaunchIntentForPackage()&#34;&gt;&lt;/a&gt;1. 使用 &lt;code&gt;PackageManager.getLaunchIntentForPackage()&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String package_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;PackageManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;packageManager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getPackageManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; packageManager.getLaunchIntentForPackage(package_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;startActivity(it);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;该方法针对只知道包名，想要启动该应用时使用，对该应用的唯一限制是&lt;strong&gt;有默认的入口 Activity&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;当没有默认的入口 Activity 时，会报 &lt;code&gt;NullPointerException&lt;/code&gt; 异常：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java.lang.NullPointerException: Attempt to invoke virtual method &amp;#x27;java.lang.String android.content.Intent.toString()&amp;#x27; on a null object reference&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再看看 &lt;code&gt;getLaunchIntentForPackage()&lt;/code&gt; 方法的说明：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * Returns a &amp;quot;good&amp;quot; intent to launch a front-door activity in a package.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * This is used, for example, to implement an &amp;quot;open&amp;quot; button when browsing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * through packages.  The current implementation looks first for a main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * activity in the category &amp;#123;&lt;span class=&#34;doctag&#34;&gt;@link&lt;/span&gt; Intent#CATEGORY_INFO&amp;#125;, and next for a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * main activity in the category &amp;#123;&lt;span class=&#34;doctag&#34;&gt;@link&lt;/span&gt; Intent#CATEGORY_LAUNCHER&amp;#125;. Returns&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; if neither are found.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; packageName The name of the package to inspect.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; A fully-qualified &amp;#123;&lt;span class=&#34;doctag&#34;&gt;@link&lt;/span&gt; Intent&amp;#125; that can be used to launch the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * main activity in the package. Returns &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; if the package&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * does not contain such an activity, or if &amp;lt;em&amp;gt;packageName&amp;lt;/em&amp;gt; is not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * recognized.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; Intent &lt;span class=&#34;title function_&#34;&gt;getLaunchIntentForPackage&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String packageName)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;所以使用此方式判定 Intent 是否为空即可。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;package_name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;PackageManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;packageManager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getPackageManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; packageManager.getLaunchIntentForPackage(package_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (it != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivity(it);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//没有默认的入口 Activity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-使用-Intent-setComponent&#34;&gt;&lt;a href=&#34;#2-使用-Intent-setComponent&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Intent.setComponent()&#34;&gt;&lt;/a&gt;2. 使用 &lt;code&gt;Intent.setComponent()&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;package_name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;activity_path&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx.ab.xxActivity&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);&lt;span class=&#34;comment&#34;&gt;//可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ComponentName&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;comp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ComponentName&lt;/span&gt;(package_name,activity_path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setComponent(comp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;此方式可以启动一个应用指定的 Activity，不限于默认入口 Activity。但此方式要求的条件多，如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;知道 App 的包名和 Activity 的全路径及其名称&lt;/li&gt;
&lt;li&gt;需要启动的目标 Activity 在 AndroidManifest.xml 中的属性 &lt;code&gt;Export=“true”&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那这种方式下，如何判断目标 Activity 是否存在呢？&lt;/p&gt;
&lt;p&gt;下面是网上流传的非常普遍的用法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;package_name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;activity_path&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx.ab.xxActivity&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);&lt;span class=&#34;comment&#34;&gt;//可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ComponentName&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;cn&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ComponentName&lt;/span&gt;(package_name,activity_path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setComponent(cn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (intent.resolveActivity(getPackageManager()) != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//找不到指定的 Activity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;遗憾的是，&lt;code&gt;Intent.resolveActivity()&lt;/code&gt; 方法并不能判定此方式所要启动的 Activity 是否存在，如果此 Activity 不存在，会报 &lt;code&gt;java.lang.IllegalArgumentException: Unknown component&lt;/code&gt; 异常，并导致程序崩溃。&lt;/p&gt;
&lt;p&gt;下面看下 &lt;code&gt;resolveActivity()&lt;/code&gt; 的代码，以及它的 相似方法 &lt;code&gt;resolveActivityInfo()&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; ComponentName &lt;span class=&#34;title function_&#34;&gt;resolveActivity&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(PackageManager pm)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mComponent != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; mComponent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;ResolveInfo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; pm.resolveActivity(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		PackageManager.MATCH_DEFAULT_ONLY);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (info != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ComponentName&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			info.activityInfo.applicationInfo.packageName,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			info.activityInfo.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; ActivityInfo &lt;span class=&#34;title function_&#34;&gt;resolveActivityInfo&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(PackageManager pm, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flags)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;ActivityInfo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ai&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mComponent != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ai = pm.getActivityInfo(mComponent, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (PackageManager.NameNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// ignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;ResolveInfo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; pm.resolveActivity(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			PackageManager.MATCH_DEFAULT_ONLY | flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (info != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ai = info.activityInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ai;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;显而易见，我们此方式就是先设置的 ComponentName，所以会直接 &lt;code&gt;return mComponent&lt;/code&gt; 给我们，并没有任何判定的逻辑。相对的，&lt;code&gt;resolveActivityInfo()&lt;/code&gt; 则可以进行有效判定并返回 null。故，我们选择使用 &lt;code&gt;Intent.resolveActivityInfo()&lt;/code&gt; 进行此方式下的判定：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;package_name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;activity_path&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx.ab.xxActivity&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);&lt;span class=&#34;comment&#34;&gt;//可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ComponentName&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;cn&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ComponentName&lt;/span&gt;(package_name,activity_path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setComponent(cn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (intent.resolveActivityInfo(getPackageManager(), PackageManager.MATCH_DEFAULT_ONLY) != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//找不到指定的 Activity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-隐式启动第三方应用&#34;&gt;&lt;a href=&#34;#3-隐式启动第三方应用&#34; class=&#34;headerlink&#34; title=&#34;3.隐式启动第三方应用&#34;&gt;&lt;/a&gt;3.隐式启动第三方应用&lt;/h3&gt;&lt;p&gt;此方式多用于启动系统中的功能性应用，比如打电话、发邮件、预览图片、使用默认浏览器打开一个网页等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setAction(action);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.addCategory(category);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intent.setDataAndType(&lt;span class=&#34;string&#34;&gt;&amp;quot;abc://www.dfg.com&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;image/gif&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;条件1：IntentFilter 至少有一个 action 至少有一个Category，可以没有 Data 和 Type&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;条件2：如果有 Data，参数中 Data 必须符合 Data 规则&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;条件3：Action 和 Category 必须同时匹配 Activity 中的一个 Action 和一个 Category (Category 默认：android.intent.category.DEFAULT)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来源： &lt;a href=&#34;http://blog.csdn.net/tonyyxm/article/details/50260185&#34;&gt;Android 启动第三方应用的几种方法（整理）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;隐式启动功能繁多，就不一一列举了，需要时直接搜索相关代码即可，我们用打开一个网页为例：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Uri&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;uri&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Uri.parse(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.abc.xyz&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;(Intent.ACTION_VIEW, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这时，直接使用 &lt;code&gt;Intent.resolveActivity()&lt;/code&gt; 方法没什么问题：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Uri&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;uri&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Uri.parse(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.abc.xyz&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Intent&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;intent&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;(Intent.ACTION_VIEW, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (intent.resolveActivity(getPackageManager()) != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 没有安装所需应用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;经过阅读 PackageManager 的代码，发现还可以使用 &lt;code&gt;packageManager.queryIntentActivities()&lt;/code&gt; 方法判断系统里是否有能解析指定 Intent 的应用。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isAvailable&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context, Intent intent)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;PackageManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;packageManager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getPackageManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; packageManager.queryIntentActivities(intent,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	PackageManager.MATCH_DEFAULT_ONLY);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; list.size() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么，总结下来就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式一 &lt;code&gt;PackageManager.getLaunchIntentForPackage()&lt;/code&gt;，直接判断返回的 Intent 是否为空即可；&lt;/li&gt;
&lt;li&gt;方式二 &lt;code&gt;Intent.setComponent()&lt;/code&gt;，使用 &lt;code&gt;Intent.resolveActivityInfo()&lt;/code&gt; 或者 &lt;code&gt;packageManager.queryIntentActivities()&lt;/code&gt; 两种方式；&lt;/li&gt;
&lt;li&gt;方式三 隐式启动，使用  &lt;code&gt;Intent.resolveActivity()&lt;/code&gt;、&lt;code&gt;Intent.resolveActivityInfo()&lt;/code&gt; 、&lt;code&gt;packageManager.queryIntentActivities()&lt;/code&gt; 三种方式均可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="Intent" />
        <updated>2017-08-30T08:54:23.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/07/07/android-empty-view/</id>
        <title>Android 必知必会 - EmptyView</title>
        <link rel="alternate" href="https://likfe.com/2017/07/07/android-empty-view/"/>
        <content type="html">&lt;p&gt;关键词：GridView ListView EmptyView SwipeRefreshLayout&lt;/p&gt;
&lt;p&gt;在使用 GridView、ListView 时经常需要处理无数据的情况，给用户一些必要的提示。而 GridView 和 ListView 可以使用 &lt;code&gt;setEmptyView()&lt;/code&gt; 方法来设置无数据时展示的  View 。&lt;/p&gt;
&lt;p&gt;本文讲一下 EmptyView 的基本用法以及如何配合 SwipeRefreshLayout 使用。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;背景知识点&#34;&gt;&lt;a href=&#34;#背景知识点&#34; class=&#34;headerlink&#34; title=&#34;背景知识点&#34;&gt;&lt;/a&gt;背景知识点&lt;/h2&gt;&lt;h3 id=&#34;FrameLayout-布局方式的特点&#34;&gt;&lt;a href=&#34;#FrameLayout-布局方式的特点&#34; class=&#34;headerlink&#34; title=&#34;FrameLayout 布局方式的特点&#34;&gt;&lt;/a&gt;FrameLayout 布局方式的特点&lt;/h3&gt;&lt;p&gt;FrameLayout 是对其子 View 约束最少最简单的布局，所有放在 FrameLayout 里的控件，都按照层次堆叠在屏幕的左上角。后加进来的控件覆盖前面的控件。&lt;/p&gt;
&lt;p&gt;嗯，就像喷漆，后面喷的总是覆盖在之前喷的上面。&lt;/p&gt;
&lt;h3 id=&#34;setEmptyView-都做了什么？&#34;&gt;&lt;a href=&#34;#setEmptyView-都做了什么？&#34; class=&#34;headerlink&#34; title=&#34;setEmptyView() 都做了什么？&#34;&gt;&lt;/a&gt;&lt;code&gt;setEmptyView()&lt;/code&gt; 都做了什么？&lt;/h3&gt;&lt;p&gt;&lt;code&gt;setEmptyView(View emptyView)&lt;/code&gt; 是 &lt;code&gt;AdapterView&lt;/code&gt; 的一个方法，ListView、GridView、Spinner 和 Gallery 都是 &lt;code&gt;AdapterView&lt;/code&gt; 的子类，那么理论上来说，本文讲解的针对 ListView、GridView 设置 EmptyView 的方法对于 Spinner、Gallery 应该同样适用。&lt;/p&gt;
&lt;p&gt;下面简单看下这个方法的源码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setEmptyView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View emptyView)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mEmptyView = emptyView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// If not explicitly specified this view is important for accessibility.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (emptyView != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;amp;&amp;amp; emptyView.getImportantForAccessibility() == IMPORTANT_FOR_ACCESSIBILITY_AUTO) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            emptyView.setImportantForAccessibility(IMPORTANT_FOR_ACCESSIBILITY_YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;adapter&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;empty&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; ((adapter == &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) || adapter.isEmpty());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        updateEmptyStatus(empty);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * Update the status of the list based on the empty parameter.  If empty is true and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * we have an empty view, display it.  In all the other cases, make sure that the listview&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * is VISIBLE and that the empty view is GONE (if it&amp;#x27;s not null).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;updateEmptyStatus&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; empty)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isInFilterMode()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            empty = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (empty) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mEmptyView != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mEmptyView.setVisibility(View.VISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                setVisibility(View.GONE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// If the caller just removed our empty view, make sure the list view is visible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                setVisibility(View.VISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// We are now GONE, so pending layouts will not be dispatched.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// Force one here to make sure that the state of the list matches&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// the state of the adapter.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mDataChanged) &amp;#123;           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.onLayout(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, mLeft, mTop, mRight, mBottom); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mEmptyView != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) mEmptyView.setVisibility(View.GONE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setVisibility(View.VISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;基本就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据为空&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setVisibility(View.GONE);&lt;/code&gt; 隐藏自身&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mEmptyView.setVisibility(View.VISIBLE);&lt;/code&gt; 显示 EmptyView&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据不为空&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mEmptyView.setVisibility(View.GONE);&lt;/code&gt; 隐藏 EmptyView&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setVisibility(View.VISIBLE);&lt;/code&gt; 显示自身&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，中间还有一些非空判断等。&lt;/p&gt;
&lt;h2 id=&#34;用法&#34;&gt;&lt;a href=&#34;#用法&#34; class=&#34;headerlink&#34; title=&#34;用法&#34;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;p&gt;这里需要说明一点，EmptyView 只要是一个 View 即可，所以除了基本控件（TextView|Button 等）外，也可以是嵌套的布局（LinearLayout|RelativeLayout 等）。&lt;/p&gt;
&lt;h3 id=&#34;基础用法&#34;&gt;&lt;a href=&#34;#基础用法&#34; class=&#34;headerlink&#34; title=&#34;基础用法&#34;&gt;&lt;/a&gt;基础用法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;布局：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LinearLayout|FrameLayout|RelativeLayout&lt;ul&gt;
&lt;li&gt;GridView|ListView (id &amp;#x3D; dataView)&lt;/li&gt;
&lt;li&gt;View( id &amp;#x3D; mEmptyView ,任意 View，可嵌套)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关键代码：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setContentView(R.layout.xxx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mDataView = (GridView|ListView) findViewById(R.id.dataView);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	adapter = xxxx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mDataView.setAdapter(adapter);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mDataView.setEmptyView(findViewById(R.id.mEmptyView));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;PS：务必在 &lt;code&gt;setAdapter()&lt;/code&gt; 之后调用 &lt;code&gt;setEmptyView()&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;配合-SwipeRefreshLayout-使用&#34;&gt;&lt;a href=&#34;#配合-SwipeRefreshLayout-使用&#34; class=&#34;headerlink&#34; title=&#34;配合 SwipeRefreshLayout 使用&#34;&gt;&lt;/a&gt;配合 SwipeRefreshLayout 使用&lt;/h3&gt;&lt;p&gt;配合 SwipeRefreshLayout 使用和基础用法类似，唯一需要注意的是布局的嵌套关系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布局：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FrameLayout&lt;ul&gt;
&lt;li&gt;SwipeRefreshLayout&lt;ul&gt;
&lt;li&gt;GridView|ListView (id &amp;#x3D; dataView)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;View( id &amp;#x3D; mEmptyView ,任意 View，可嵌套)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关键代码没有变化&lt;/strong&gt;。这里 &lt;code&gt;GridView|ListView&lt;/code&gt;在 &lt;code&gt;SwipeRefreshLayout&lt;/code&gt; 内部，&lt;code&gt;SwipeRefreshLayout&lt;/code&gt; 和 &lt;code&gt;EmptyView&lt;/code&gt; 需要同级，且最好在 &lt;code&gt;FrameLayout&lt;/code&gt; 内部。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;本文简单总结了两种最基本的用法，其他更高级更复杂嵌套的情况都可以参考这两种基本用法。&lt;/p&gt;
&lt;p&gt;有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2017-07-07T08:18:35.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/06/01/android-dialogfragment-as-pop/</id>
        <title>Android 必知必会 - DialogFragment 实现类似 PopupWindow 效果</title>
        <link rel="alternate" href="https://likfe.com/2017/06/01/android-dialogfragment-as-pop/"/>
        <content type="html">&lt;p&gt;近期有网友根据 &lt;a href=&#34;http://blog.csdn.net/ys743276112/article/details/52962046&#34;&gt;Android 必知必会 - DialogFragment 使用总结&lt;/a&gt; 做一些业务，但是目标却是用 DialogFragment 实现类似 PopupWindow 效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只拦截自身所占空间部分的事件，其余空间的点击事件不处理&lt;/li&gt;
&lt;li&gt;可以根据某个 View 定位自身位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然在功能上 PopupWindow 更符合需要，但是使用 DialogFragment 代码更简洁、更方便封装功能模块。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;基础知识点&#34;&gt;&lt;a href=&#34;#基础知识点&#34; class=&#34;headerlink&#34; title=&#34;基础知识点&#34;&gt;&lt;/a&gt;基础知识点&lt;/h2&gt;&lt;h3 id=&#34;WindowManager-LayoutParams-flags&#34;&gt;&lt;a href=&#34;#WindowManager-LayoutParams-flags&#34; class=&#34;headerlink&#34; title=&#34;WindowManager.LayoutParams.flags&#34;&gt;&lt;/a&gt;WindowManager.LayoutParams.flags&lt;/h3&gt;&lt;p&gt;&lt;code&gt;WindowManager.LayoutParams.flags&lt;/code&gt; 修改 Window 的表现行为&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* Various behavioral options/flags.  Default is none.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_ALLOW_LOCK_WHILE_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DIM_BEHIND&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_FOCUSABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_TOUCHABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_NOT_TOUCH_MODAL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_TOUCHABLE_WHEN_WAKING&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_KEEP_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_IN_SCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_NO_LIMITS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_FULLSCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_FORCE_NOT_FULLSCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SECURE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SCALED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_IGNORE_CHEEK_PRESSES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LAYOUT_INSET_DECOR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_ALT_FOCUSABLE_IM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_WATCH_OUTSIDE_TOUCH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SHOW_WHEN_LOCKED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SHOW_WALLPAPER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_TURN_SCREEN_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DISMISS_KEYGUARD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_SPLIT_TOUCH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_HARDWARE_ACCELERATED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_LOCAL_FOCUS_MODE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* @see #FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以上可以看到它有很多可选项，加上可以多个相互组合，能满足很多需求，这里重点关注三个属性值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FLAG_NOT_TOUCH_MODAL&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: even when this window is focusable (its &lt;code&gt;FLAG_NOT_FOCUSABLE&lt;/code&gt; is not set), allow any pointer events outside of the window to be sent to the windows behind it.&lt;/p&gt;
&lt;p&gt; (API level 1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FLAG_TRANSLUCENT_NAVIGATION&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: request a translucent navigation bar with minimal system-provided background protection.&lt;/p&gt;
&lt;p&gt; (API level 19)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FLAG_TRANSLUCENT_STATUS&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Window flag: request a translucent status bar with minimal system-provided background protection.&lt;/p&gt;
&lt;p&gt; (API level 19)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更详细的介绍请点击 &lt;a href=&#34;https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams.html&#34;&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;FLAG_NOT_TOUCH_MODAL&lt;/code&gt; 可达到『只拦截自身所占空间部分的事件，其余空间的点击事件不处理』的需求，而 &lt;code&gt;FLAG_TRANSLUCENT_NAVIGATION&lt;/code&gt; 和 &lt;code&gt;FLAG_TRANSLUCENT_STATUS&lt;/code&gt; 主要是用来调整使用&lt;strong&gt;沉浸式状态栏&lt;/strong&gt;时显示自身位置不正确的问题。&lt;/p&gt;
&lt;h3 id=&#34;获取-View-位置的时机&#34;&gt;&lt;a href=&#34;#获取-View-位置的时机&#34; class=&#34;headerlink&#34; title=&#34;获取 View 位置的时机&#34;&gt;&lt;/a&gt;获取 View 位置的时机&lt;/h3&gt;&lt;p&gt;如果需要让 DialogFragment 在 &lt;code&gt;onCreate()&lt;/code&gt; 等生命周期函数内直接调用显示到某个 View 的位置处，可能无法正确获取到该 View 的坐标，具体参考 &lt;a href=&#34;http://blog.csdn.net/ys743276112/article/details/51396838&#34;&gt;Android必知必会-获取View坐标和长宽的时机&lt;/a&gt; 一文。&lt;/p&gt;
&lt;p&gt;但是，如果在界面显示给用户后，DialogFragment 的显示交给用户触发的话，就不需要在意这个问题了。&lt;/p&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;TopFragment.java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TopFragment&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DialogFragment&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;EXT_Y&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;y value&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;EXT_BAR&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;isTranslucentDecor&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; isTranslucentDecor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; TopFragment &lt;span class=&#34;title function_&#34;&gt;getInstant&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; getInstant(y, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; TopFragment &lt;span class=&#34;title function_&#34;&gt;getInstant&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; isTranslucentDecor)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;TopFragment&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;fragment&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TopFragment&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Bundle&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ext&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Bundle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ext.putInt(EXT_Y, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ext.putBoolean(EXT_BAR, isTranslucentDecor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fragment.setArguments(ext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; fragment;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        setStyle(DialogFragment.STYLE_NO_TITLE, R.style.dialogFrag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Bundle&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getArguments();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (args != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            y = args.getInt(EXT_Y, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            isTranslucentDecor = args.getBoolean(EXT_BAR, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            y = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            isTranslucentDecor = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; View &lt;span class=&#34;title function_&#34;&gt;onCreateView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(LayoutInflater inflater, ViewGroup container,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;                             Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getDialog().setCanceledOnTouchOutside(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rootView&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; inflater.inflate(R.layout.fragment_top, container, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;Window&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getDialog().getWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setBackgroundDrawableResource(android.R.color.transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.getDecorView().setPadding(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        WindowManager.&lt;span class=&#34;type&#34;&gt;LayoutParams&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;wlp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; window.getAttributes();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.width = WindowManager.LayoutParams.MATCH_PARENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.height = WindowManager.LayoutParams.WRAP_CONTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isTranslucentDecor) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            wlp.flags |= WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.gravity = Gravity.TOP;&lt;span class=&#34;comment&#34;&gt;//必须为 TOP，否则定位不准确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wlp.y = y;&lt;span class=&#34;comment&#34;&gt;//配合 Gravity.TOP 才能准确定位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.setAttributes(wlp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	&lt;span class=&#34;comment&#34;&gt;//Debug info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rootView.findViewById(R.id.vvv).setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View&lt;/span&gt;.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Toast.makeText(getActivity(), &lt;span class=&#34;string&#34;&gt;&amp;quot;dialogFragment 响应了点击事件&amp;quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rootView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;MainActivity.java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle savedInstanceState)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	findViewById(R.id.bt_menu).setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View&lt;/span&gt;.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;TextView&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.tv_title);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TopFragment.getInstant(title.getBottom()).show(getSupportFragmentManager(), &lt;span class=&#34;string&#34;&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意：如果当前 Activity 使用了&lt;strong&gt;沉浸式状态栏&lt;/strong&gt;，需要使用 &lt;code&gt;TopFragment.getInstant(int y, boolean isTranslucentDecor)&lt;/code&gt; 方法，并且 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;true&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;效果图&#34;&gt;&lt;a href=&#34;#效果图&#34; class=&#34;headerlink&#34; title=&#34;效果图&#34;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;未使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;false&lt;/code&gt; ，位置正确&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;false&lt;/code&gt; ，位置定位差个状态栏高度&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;使用沉浸式状态栏、 &lt;code&gt;isTranslucentDecor&lt;/code&gt; 传值为 &lt;code&gt;true&lt;/code&gt; ，位置正确&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183835306?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s1&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183850744?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s2&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170601183904651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXM3NDMyNzYxMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;s3&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;总的来说，这里基本完成了要求的效果，但是定位只能指定其顶部开始的位置，不方便底部定位到某个 View 的上面，因为高度自适应的话，在页面渲染完成前是不能知道它的高度的。当然，你可以使用固定高度布局的方式来实现随意定位。&lt;/p&gt;
&lt;p&gt;有什么建议或者问题可以随时联系我，共同探讨学习：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="DialogFragment" />
        <category term="PopupWindow" />
        <updated>2017-06-01T02:56:29.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/05/10/android-sys-language/</id>
        <title>Android 项目开发填坑记 - 获取系统语言(兼容7.0)</title>
        <link rel="alternate" href="https://likfe.com/2017/05/10/android-sys-language/"/>
        <content type="html">&lt;p&gt;关键词：&lt;code&gt;Android7.0&lt;/code&gt; 、&lt;code&gt;系统语言&lt;/code&gt; 、&lt;code&gt;顺序不一致&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取系统当前语言是一个比较常用的功能，在 Android 7.0 系统上旧函数获取到的当前系统语言并不正确，或者说从 Android 7.0 起，Android 系统语言的规则变了。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;下面是未适配 Android 7.0 的代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取 Locale 的方式有二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getResources().getConfiguration().locale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Locale.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取当前系统语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;locale.getLanguage();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于仅仅根据 &lt;code&gt;getLanguage()&lt;/code&gt; 无法全面的了解当前的系统语言信息，比如简体中文和繁体中文的 Language 都是 &lt;code&gt;zh&lt;/code&gt;，所以还需要 &lt;code&gt;getCountry()&lt;/code&gt;  方法获取地区信息，我们就能得到 &lt;code&gt;zh-CN&lt;/code&gt; 和 &lt;code&gt;zh-HK/zh-TW&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;总结一下就是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取 Locale 的方式有二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getResources().getConfiguration().locale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Locale.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取当前系统语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lang&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; locale.getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + locale.getCountry();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是，在 Android 7.0 上：&lt;code&gt;getResources().getConfiguration().locale&lt;/code&gt; 被标记为 &lt;strong&gt;deprecated&lt;/strong&gt; 了，所以&lt;strong&gt;初步适配&lt;/strong&gt;后是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Locale locale；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.N) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    locale = getResources().getConfiguration().getLocales().get(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    locale = getResources().getConfiguration().locale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//或者仅仅使用 locale = Locale.getDefault(); 不需要考虑接口 deprecated(弃用)问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;lang&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; locale.getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + locale.getCountry();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从 Android 7.0 起使用的&lt;code&gt;getResources().getConfiguration().getLocales()&lt;/code&gt; 返回的是一个 &lt;code&gt;LocaleList&lt;/code&gt; 对象，它包含 &lt;code&gt;&amp;gt;=1&lt;/code&gt; 个 Locale，内容项可由用户增删，顺序可由用户调整。但是，此接口返回的语言顺序和用户定义的顺序&lt;strong&gt;不一定一致&lt;/strong&gt;！&lt;/p&gt;
&lt;h2 id=&#34;测试语言顺序&#34;&gt;&lt;a href=&#34;#测试语言顺序&#34; class=&#34;headerlink&#34; title=&#34;测试语言顺序&#34;&gt;&lt;/a&gt;测试语言顺序&lt;/h2&gt;&lt;p&gt;测试核心代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Locale.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MLog.e(locale.getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + locale.getCountry());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.N) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LocaleList&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localeList&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getResources().getConfiguration().getLocales();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; localeList.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		MLog.e(i + &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;gt;1&amp;gt; &amp;quot;&lt;/span&gt; + localeList.get(i).getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + localeList.get(i).getCountry());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LocaleList&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localeList2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocaleList.getAdjustedDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; localeList2.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		MLog.e(i + &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;gt;2&amp;gt; &amp;quot;&lt;/span&gt; + localeList2.get(i).getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + localeList2.get(i).getCountry());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LocaleList&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localeList3&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocaleList.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; localeList3.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		MLog.e(i + &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;gt;3&amp;gt; &amp;quot;&lt;/span&gt; + localeList3.get(i).getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + localeList3.get(i).getCountry());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LocaleList&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localeList4&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocaleList.getEmptyLocaleList();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; localeList4.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		MLog.e(i + &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;gt;4&amp;gt; &amp;quot;&lt;/span&gt; + localeList4.get(i).getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + localeList4.get(i).getCountry());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;第一次测试&#34;&gt;&lt;a href=&#34;#第一次测试&#34; class=&#34;headerlink&#34; title=&#34;第一次测试&#34;&gt;&lt;/a&gt;第一次测试&lt;/h3&gt;&lt;p&gt;测试手机：Nubia Z9 mini，Android 7.1，Mokee Rom&lt;/p&gt;
&lt;p&gt;手机系统语言顺序：&lt;code&gt;hi-IN,zh-CN,en-US,zh-HK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;App 国际化：&lt;code&gt;values,values-zh&lt;/code&gt; （values 里的 string 为英文，values-zh 里的 string 为中文）&lt;/p&gt;
&lt;p&gt;结果是：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;1&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;1&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;1&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;1&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;2&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;2&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;2&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;2&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;3&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;3&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;3&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;3&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;并且 App 当前显示的文字是&lt;strong&gt;中文&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;第二次测试&#34;&gt;&lt;a href=&#34;#第二次测试&#34; class=&#34;headerlink&#34; title=&#34;第二次测试&#34;&gt;&lt;/a&gt;第二次测试&lt;/h3&gt;&lt;p&gt;测试手机：Nubia Z9 mini，Android 7.1，Mokee Rom&lt;/p&gt;
&lt;p&gt;手机系统语言顺序：&lt;code&gt;hi-IN,en-US,zh-CN,zh-HK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;App 国际化：&lt;code&gt;values,values-zh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结果是：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;1&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;1&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;1&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;1&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;2&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;2&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;2&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;2&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &amp;gt;3&amp;gt; hi-IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;gt;3&amp;gt; en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;gt;3&amp;gt; zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 &amp;gt;3&amp;gt; zh-HK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;并且 App 当前显示的文字是&lt;strong&gt;英文&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;&lt;a href=&#34;#结论&#34; class=&#34;headerlink&#34; title=&#34;结论&#34;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;从 Android 7.0 开始，系统语言支持多个，可手动排序，系统根据 App 本身支持的语言和手机出厂设置的语言等因素来调整 App 本身的默认语言。&lt;/p&gt;
&lt;p&gt;要获取系统为 App &lt;strong&gt;调整后的默认语言&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Locale&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;locale&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Locale.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Locale.getDefault() 和 LocaleList.getAdjustedDefault().get(0) 同等效果，还不需要考虑版本问题，推荐直接使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; locale.getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + locale.getCountry();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;要获取系统&lt;strong&gt;真实首选语言&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Locale locale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.N) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	locale = LocaleList.getDefault().get(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; locale = Locale.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; locale.getLanguage() + &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + locale.getCountry();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&#34;https://developer.android.com/reference/java/util/Locale.html&#34;&gt;https://developer.android.com/reference/java/util/Locale.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：你可以通过下面的方式和我联系&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2017-05-10T03:07:26.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/03/15/android-studio-exploded-aar/</id>
        <title>Android 必知必会 - Android Studio 2.3 找回 exploded-aar 目录【官方已更新】</title>
        <link rel="alternate" href="https://likfe.com/2017/03/15/android-studio-exploded-aar/"/>
        <content type="html">&lt;p&gt;今天收到邮件提示 &lt;code&gt;exploded-aar&lt;/code&gt; 目录问题在 &lt;code&gt;gradle plugin 2.5&lt;/code&gt; 版本修复好了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Marked as Fixed&lt;/p&gt;
&lt;p&gt;in 2.3&amp;#x2F;2.4 you can look in the build cache entries and look in the input file that indicate the source of the cache entry (maven coordinate).&lt;br&gt;in 2.5+ we switched to Gradle’s own cache so you’ll have to look in the gradle folder.&lt;br&gt;If all you need is manually get the aar content you could also manually download the aar and unzip it yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看 Issue 详情（需要梯子）：&lt;a href=&#34;https://issuetracker.google.com/issues/37127616&#34;&gt;Issue 页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— 更新于 2017-05-11&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;升级到 Android Studio 2.3 后，Gradle Plugin 也升级到 2.3.0，对应推荐使用的 Gradle 版本是 3.3。&lt;/p&gt;
&lt;p&gt;这时候会发现项目目录下 &lt;code&gt;&amp;#123;module name&amp;#125;/build/intermediates/exploded-aar/&lt;/code&gt; 目录没了，经过一番查找，发现这并不是一个 Bug，是官方刻意为之，它会在 &lt;code&gt;&amp;#123;user name&amp;#125;/.android/build-cache&lt;/code&gt; 下生成一部分缓存文件，来代替 &lt;code&gt;exploded-aar&lt;/code&gt; ，如果需要生成它，可以配置项目目录下的 &lt;code&gt;gradle.properties&lt;/code&gt; ，添加一行内容：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android.enableBuildCache=false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;然后重建项目即可在 &lt;code&gt;&amp;#123;module name&amp;#125;/build/intermediates/&lt;/code&gt; 看到 &lt;strong&gt;exploded-aar&lt;/strong&gt; 目录了。&lt;/p&gt;
&lt;p&gt;想重新开启 &lt;code&gt;BuildCache&lt;/code&gt;  功能，可以修改为 &lt;code&gt;android.enableBuildCache=true&lt;/code&gt; 或者直接删除本行内容即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;：你可以通过下面的方式和我联系&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <category term="AndroidStudio" />
        <category term="Gradle" />
        <updated>2017-03-15T10:45:35.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/03/13/android-update-gradle/</id>
        <title>Android Studio 升级 gradle 报错</title>
        <link rel="alternate" href="https://likfe.com/2017/03/13/android-update-gradle/"/>
        <content type="html">&lt;p&gt;错误提示如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Gradle sync failed: Cause: error in opening zip file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Consult IDE log for more details (Help | Show Log)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;今天升级 2.2 到 2.3 后打开一个项目提示升级 gradle，就同意了，结果报了上面的错误。&lt;/p&gt;
&lt;p&gt;大概原因应该是下载的最新的 gradle 包有问题，新升级后配置的代理失效了。&lt;/p&gt;
&lt;p&gt;操作如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除项目目录下的 &lt;code&gt;.gradle/&lt;/code&gt; 整个项目&lt;/li&gt;
&lt;li&gt;查看 &lt;code&gt;gradle/wrapper/gradle-warpper.properties&lt;/code&gt; 的 &lt;code&gt;distributionUrl&lt;/code&gt; 的 gradle 版本，比如是 3.3 ，然后去 &lt;code&gt;~/.gradle/warpper/dists/&lt;/code&gt; 下删除对应版本的 gradle ,这里是 &lt;code&gt;gradle-3.3-all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后重启 Android Studio 让它重新同步即可&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Android" />
        <category term="AndroidStudio" />
        <category term="Gradle" />
        <updated>2017-03-13T03:22:25.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/03/02/mac-android-no-log/</id>
        <title>解决 Mac 下 Android Studio 不打印日志</title>
        <link rel="alternate" href="https://likfe.com/2017/03/02/mac-android-no-log/"/>
        <content type="html">&lt;p&gt;在 Mac 下使用 Android Studio 时常会遇到 Android Monitor 突然不打印日志的情况，目前知道的有三个方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;重启 Android Studio&lt;/p&gt;
&lt;p&gt;这个不需要多说，点击 Android Studio 的 File &amp;#x3D;&amp;gt; Invalidate caches &amp;#x2F; Restart ，选择 Just Restart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启 adb&lt;/p&gt;
&lt;p&gt;命令行下输入：&lt;code&gt;adb kill-server&lt;/code&gt; 关闭 adb，&lt;code&gt;adb start-server&lt;/code&gt; 开启 adb 即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换 adb 的 root&amp;#x2F;unroot 模式&lt;/p&gt;
&lt;p&gt;这个实际上还是重启了 adb 。 &lt;code&gt;adb root&lt;/code&gt; 使 adb 默认进入 root 模式，&lt;code&gt;adb unroot&lt;/code&gt; 使 adb 进入非 root 模式，切换模式会导致 adb 重启。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Android" />
        <category term="Mac" />
        <updated>2017-03-02T06:44:54.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/02/07/android-is-app-running/</id>
        <title>Android 必知必会 - 根据包名判断 App 运行状态</title>
        <link rel="alternate" href="https://likfe.com/2017/02/07/android-is-app-running/"/>
        <content type="html">&lt;p&gt;获取指定包名的 APP 是否还在后台运行，判断 APP 是否存活。&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;可以根据 App 是否有 &lt;code&gt;Service&lt;/code&gt; 分两类情况处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有 &lt;code&gt;Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;有 &lt;code&gt;Service&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于没有 &lt;code&gt;Service&lt;/code&gt; 的 App，程序一旦切换到后台，可能很快就被回收了，这里使用 &lt;code&gt;ActivityManager.getRunningTasks(int maxNum)&lt;/code&gt; 方法来获取当前正在运行的任务，注意：此方法并不被系统推荐，且是一个 &lt;code&gt;Deprecated&lt;/code&gt; 的方法。&lt;/p&gt;
&lt;p&gt;对于有 &lt;code&gt;Service&lt;/code&gt; 的 App，大多会有多个 &lt;code&gt;Service&lt;/code&gt; ，且有可能都是 &lt;code&gt;:remote&lt;/code&gt; 类型的，这样在判断上需要进行一定的处理，这里根据 App 的 &lt;code&gt;uid&lt;/code&gt; 来判断，避免在一些特殊的情况下判断存活不准确的问题。我们使用 &lt;code&gt;ActivityManager.getRunningServices(int maxNum)&lt;/code&gt; 方法获取当前运行中的 &lt;code&gt;Service&lt;/code&gt; 列表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;App 的 &lt;code&gt;uid&lt;/code&gt;  对于系统内置 App 而言不是唯一的，Android 内置的应用会有共用 &lt;code&gt;uid&lt;/code&gt; 的情况。如果你是开发系统内置应用或者类似的东西，务必要自行进行特殊方式检查。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;实现&#34;&gt;&lt;a href=&#34;#实现&#34; class=&#34;headerlink&#34; title=&#34;实现&#34;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;p&gt;下面是几个工具类，在正式使用的时候需要配合使用，才能覆盖全部情况：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * 方法描述：判断某一应用是否正在运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * Created by cafeting on 2017/2/4.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; context     上下文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; packageName 应用的包名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; true 表示正在运行，false 表示没有运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isAppRunning&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context, String packageName)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;type&#34;&gt;ActivityManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;am&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       List&amp;lt;ActivityManager.RunningTaskInfo&amp;gt; list = am.getRunningTasks(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (list.size() &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (ActivityManager.RunningTaskInfo info : list) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (info.baseActivity.getPackageName().equals(packageName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//获取已安装应用的 uid，-1 表示未安装此应用或程序异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getPackageUid&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context, String packageName)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;type&#34;&gt;ApplicationInfo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;applicationInfo&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getPackageManager().getApplicationInfo(packageName, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (applicationInfo != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               Logger.d(applicationInfo.uid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; applicationInfo.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * 判断某一 uid 的程序是否有正在运行的进程，即是否存活&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * Created by cafeting on 2017/2/4.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; context     上下文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; uid 已安装应用的 uid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; true 表示正在运行，false 表示没有运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isProcessRunning&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; uid)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;type&#34;&gt;ActivityManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;am&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       List&amp;lt;ActivityManager.RunningServiceInfo&amp;gt; runningServiceInfos = am.getRunningServices(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (runningServiceInfos.size() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (ActivityManager.RunningServiceInfo appProcess : runningServiceInfos)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (uid == appProcess.uid) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在正式使用的时候结合两者即可：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;pName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;uid&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; getPackageUid(context, pName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(uid &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rstA&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; isAppRunning(context, pName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;rstB&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; isProcessRunning(context, uid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(rstA||rstB)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	&lt;span class=&#34;comment&#34;&gt;//指定包名的程序正在运行中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	&lt;span class=&#34;comment&#34;&gt;//指定包名的程序未在运行中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;//应用未安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;在探索验证程序存活的过程中，发现 &lt;code&gt;ActivityManager.RunningServiceInfo&lt;/code&gt; 包含很多信息，一开始我是使用其 &lt;code&gt;process&lt;/code&gt; 和 &lt;code&gt;started&lt;/code&gt; 属性来判断，其中 &lt;code&gt;process&lt;/code&gt; 对应包名，但是对于只有 &lt;code&gt;:remote&lt;/code&gt; 类型 &lt;code&gt;service&lt;/code&gt; 时，则判定不了。&lt;/p&gt;
&lt;p&gt;以上是最近开发中处理的一个需求，希望能对你有所帮助。如果你有更好的方法或者发现了文中的错误，可以通过下面的方式和我联系：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微博：&lt;a href=&#34;http://weibo.com/zyansen&#34;&gt;cafeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github： &lt;a href=&#34;https://github.com/likfe&#34;&gt;likfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSDN：&lt;a href=&#34;http://blog.csdn.net/ys743276112&#34;&gt;他叫自己Mr.张&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="Android" />
        <updated>2017-02-07T09:07:14.000Z</updated>
    </entry>
    <entry>
        <id>https://likfe.com/2017/01/05/android-app-encrypt/</id>
        <title>【译】在 Jelly Bean 中使用应用加密</title>
        <link rel="alternate" href="https://likfe.com/2017/01/05/android-app-encrypt/"/>
        <content type="html">&lt;p&gt;翻译自：&lt;a href=&#34;http://nelenkov.blogspot.jp/2012/07/using-app-encryption-in-jelly-bean.html&#34;&gt;Using app encryption in Jelly Bean&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关键词 : &lt;code&gt;adb install -l&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最新的 Android 4.1（Jelly Bean）版本在上周的 Google I &amp;#x2F; O 大会上发布了，它有一大堆新功能和改进。 其中一个有趣的功能是&lt;strong&gt;应用程序加密&lt;/strong&gt;，除了简短的说明还没有任何细节：“从 Jelly Bean 版本起，Google Play 中的付费应用程序在分发和存储之前，会使用设备特定的密钥加密”。缺乏细节当然会引起猜测，有些人甚至担心，当他们使用一个新的设备时必须回购他们的付费应用程序。 在本文中，我们将介绍如何在操作系统中实施应用加密，展示如何在不通过 Google Play 的情况下安装加密的应用，并了解 Google Play 如何提供加密的应用。&lt;/p&gt;
&lt;h2 id=&#34;操作系统对加密应用程序的支持&#34;&gt;&lt;a href=&#34;#操作系统对加密应用程序的支持&#34; class=&#34;headerlink&#34; title=&#34;操作系统对加密应用程序的支持&#34;&gt;&lt;/a&gt;操作系统对加密应用程序的支持&lt;/h2&gt;&lt;p&gt;本文之前的版本是基于 Eclipse 框架和二进制的系统镜像，并且缺少一部分。由于 Jelly Bean 已经开源，下面的讨论已经修改，现在是基于 AOSP 代码（4.1.1_r1）。如果你回来重读本文，重点放在第二部分。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;Android 上的应用可以通过几种不同的方式安装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过应用商店（例如 &lt;a href=&#34;https://play.google.com/store&#34;&gt;Google Play Store&lt;/a&gt;，也称为 Android Market）&lt;/li&gt;
&lt;li&gt;直接在手机上打开应用文件或电子邮件附件（如果启用“位置来源”选项）&lt;/li&gt;
&lt;li&gt;使用通过 USB 连接的计算机的 &lt;code&gt;adb install&lt;/code&gt; SDK 命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前两个不提供任何选项或者特定视角的底层实现，让我们探索第三个。看看使用 adb 命令的输出，可以看到 install 命令在最新的 SDK 版本中获得了几个新选项：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ adb install [-l] [-r] [-s] [--algo &amp;lt;algorithm name&amp;gt; --key &amp;lt;hex-encoded key&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--iv &amp;lt;hex-encoded iv&amp;gt;] &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;显然 &lt;code&gt;—algo&lt;/code&gt; 、 &lt;code&gt;—key&lt;/code&gt; 和 &lt;code&gt;—iv&lt;/code&gt; 参数与加密应用程序有关，所以在进入详细信息之前，首先尝试安装一个加密的 APK。使用 **&lt;a href=&#34;http://openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; enc ** 命令加密文件相当容易，通常它已经在大多数 Linux 系统上安装。我们使用 CBC 模式下的 AES 算法，配合一个128 bit 的 Key（下文可以看到，这一个不是很安全的密钥），为使事情更简单，这里使用与密钥相同的初始化向量（initialization vector, IV）。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;openssl enc -aes-128-cbc -K 000102030405060708090A0B0C0D0E0F&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-iv 000102030405060708090A0B0C0D0E0F -in my-app.apk -out my-app-enc.apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;让我们尝试安装它来检查 Android 是否喜欢我们新加密的应用程序：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;adb install --algo &lt;span class=&#34;string&#34;&gt;&amp;#x27;AES/CBC/PKCS5Padding&amp;#x27;&lt;/span&gt; --key 000102030405060708090A0B0C0D0E0F&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--iv 000102030405060708090A0B0C0D0E0F my-app-enc.apk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pkg: /data/local/tmp/my-app-enc.apk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Success&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;“Success” 的输出结果看起来似乎很有前途，然后确认应用的图标显示在系统面板中并且启动时无错误。实际的 APK 文件像往常一样被复制在 &lt;code&gt;/data/app&lt;/code&gt; 中，将其哈希值与我们加密的 APK 进行比较，发现它实际上是一个不同的文件。安装后的文件的哈希值和原始（未加密） APK 的完全相同，因此我们可以得出结论，APK 在安装是使用我们提供的加密参数（算法、密钥和 IV）进行解密。让我们看看这是如何实现的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adb install&lt;/code&gt; 命令根本上是调用 &lt;code&gt;pm&lt;/code&gt; Android 命令行实用程序，它允许我们列出、安装和删除包（应用程序）。 通常 PackageManagerService 是负责在 Android 上安装应用程序的组件，pm 只是一个方便的前端。 应用程序通常通过 &lt;a href=&#34;https://developer.android.com/reference/android/content/pm/PackageManager.html&#34;&gt;PackageManager&lt;/a&gt; 类来访问包服务。 浏览其代码并检查加密相关方法，我们发现：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;installPackageWithVerification&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Uri packageURI,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;        IPackageInstallObserver observer, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flags, String installerPackageName,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;        Uri verificationURI, ManifestDigest manifestDigest,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;        ContainerEncryptionParams encryptionParams)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ContainerEncryptionParams 类看起来特别有可能，所以让我们看看里面：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ContainerEncryptionParams&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Parcelable&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String mEncryptionAlgorithm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; IvParameterSpec mEncryptionSpec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; SecretKey mEncryptionKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String mMacAlgorithm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; AlgorithmParameterSpec mMacSpec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; SecretKey mMacKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] mMacTag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; mAuthenticatedDataStart;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; mEncryptedDataStart;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们使用的 &lt;code&gt;adb install&lt;/code&gt; 参数完全对应于类的前三个字段。 除此之外，该类还存储 MAC 相关参数，因此可以安全地假设 Android 现在可以检查应用程序二进制文件的完整性。 不幸的是，pm 命令没有任何 MAC 相关的参数（它实际上有，但由于某些原因，在当前生成中禁用），所以为了尝试 MAC 支持，我们需要直接调用 &lt;code&gt;installPackageWithVerification&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;该方法对于 SDK 应用程序是隐藏的，因此从应用程序里调用它的唯一方法是使用反射。事实证明，它的大多数参数类（ IPackageInstallObserver，ManifestDigest 和 ContainerEncryptionParams ）也被隐藏，但这只是一个小陷阱。 对于 Android 预加载框架类，即使你的应用程序捆绑了一个框架类，系统副本仍旧会在运行时使用它。这意味着我们必须做的是为 &lt;code&gt;installPackageWithVerification&lt;/code&gt; 方法获取一个句柄，将所需的类添加到我们的应用程序中的 &lt;code&gt;andorid.content.pm&lt;/code&gt; 包中。一旦我们有一个方法句柄，我们只需要实例化 &lt;code&gt;ContainerEncryptionParams&lt;/code&gt; 类，然后提供所有的加密和 MAC 相关的参数。需要注意的是，由于我们的整个文件是加密的，并且 MAC 是在其所有内容上计算的（见下文），我们为加密和认证数据的开头指定为 0，将文件大小指定为数据的结尾（查看&lt;a href=&#34;https://github.com/nelenkov/jb-app-encryption&#34;&gt;示例代码&lt;/a&gt;）。为了计算 MAC 值（标签），我们再次使用 OpenSSL：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;openssl dgst -hmac &lt;span class=&#34;string&#34;&gt;&amp;#x27;hmac_key_1&amp;#x27;&lt;/span&gt; -sha1 -hex my-app-enc.apk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HMAC-SHA1(my-app-enc.apk)= 0dc53c04d33658ce554ade37de8013b2cff0a6a5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;请注意，&lt;code&gt;dgst&lt;/code&gt; 命令不支持使用十六进制或 Base64 的 HMAC 密钥，因此您只能使用 ASCII 字符。 这对于生产使用可能不是一个好主意，因此请考虑使用真正的密钥并以某种其他方式（使用 JCE 等）来计算 MAC。&lt;/p&gt;
&lt;p&gt;我们的应用程序现在大部分已准备就绪，但安装应用程序需要 &lt;code&gt;INSTALL_PACKAGES&lt;/code&gt; 权限，该权限与保护级别 &lt;code&gt;signatureOrSystem&lt;/code&gt; 一起定义。 因此，它只被授予使用系统（ROM）密钥签名的应用程序或安装在 &lt;code&gt;/system&lt;/code&gt; 分区中的应用程序。 构建 Jelly Bean ROM 是一个有趣的练习，但现在，我们只需将我们的应用程序复制到 &lt;code&gt;/system/app&lt;/code&gt;，以获得安装软件包（在模拟器或 Root 过的设备上）的必要权限。 一旦完成，我们可以通过 &lt;code&gt;PackageManager&lt;/code&gt; 安装加密的应用程序，Android 将通过比较指定的 MAC 标记与基于实际文件内容计算的值来解密 APK 并验证包没有被篡改。 您可以通过稍微更改加密和 MAC 参数来使用示例应用程序进行测试，这将导致安装错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mmmedia.qiniudn.com/2017-01-08-160231.jpg&#34; alt=&#34;jb-app-encryption&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;android.content.pm&lt;/code&gt; 包有一些更有趣的类，例如 &lt;code&gt;MacAuthenticatedInputStream&lt;/code&gt; 和 &lt;code&gt;ManifestDigest&lt;/code&gt; ，但实际的 APK 加密和 MAC 验证是由 &lt;code&gt;DefaultContainerService$ApkContainer&lt;/code&gt; 做的，它是 &lt;code&gt;DefaultContainerService&lt;/code&gt;（aka，&lt;code&gt;Package Access Helper&lt;/code&gt;）的一部分。&lt;/p&gt;
&lt;h2 id=&#34;前向锁定（Forward-locking）&#34;&gt;&lt;a href=&#34;#前向锁定（Forward-locking）&#34; class=&#34;headerlink&#34; title=&#34;前向锁定（Forward locking）&#34;&gt;&lt;/a&gt;前向锁定（Forward locking）&lt;/h2&gt;&lt;p&gt;在移动（功能）手机上，通常当铃声、壁纸或者其他数字商品开始进行销售时，&lt;strong&gt;Forward locking&lt;/strong&gt; 会弹出。它的名称来自它的意图：阻止用户转发他们已经购买的文件给自己的朋友和家人。Android 上的主要数字内容是原生应用程序，随着付费应用越来越受欢迎，共享（二次销售）成为一个问题。应用程序包（APKs）在 Android 上是公共可读的，这使得即使是在生产设备中提取应用程序也相对容易。虽然公共可读的应用程序文件可能听起来像是一个坏主意，它根植于 Android 的开放和可扩展性—第三方启动器、Widget 容器和应用程序可以轻松的提取 APKs 的 Icon、Widget 的可定义 Intents等等。为了锁定付费应用程序而不失去任何操作系统的灵活性，Android 引入了 &lt;strong&gt;Forward locking&lt;/strong&gt;（又称“拷贝保护”）。它的想法是把应用程序包分为两部分：一个公共可读的部分，包括资源文件和 manifest （保存在 &lt;code&gt;/data/app&lt;/code&gt; ）；一个系统用户可读的包含可执行代码的包（保存在 &lt;code&gt;/data/app-private&lt;/code&gt; ）。代码包受文件系统权限保护，虽然这使得大多数消费者设备上的用户无法访问它，但是只需要获得 &lt;code&gt;root&lt;/code&gt; 访问权限即可提取它。这种方法很快就被启用，引入了在线 Android 授权（LVL）作为替代品。然而，这将应用程序保护实施从操作系统转移到应用程序开发人员，并取得了不同的结果。&lt;/p&gt;
&lt;p&gt;在 Jelly Bean 中，&lt;strong&gt;Forward locking&lt;/strong&gt;  的实现已经重新设计，现在提供了将 APK 存储在加密容器中的能力，该加密容器需要在运行时安装设备特定密钥。让我们更详细地研究一下实现。&lt;/p&gt;
&lt;h2 id=&#34;Jelly-Bean-实现&#34;&gt;&lt;a href=&#34;#Jelly-Bean-实现&#34; class=&#34;headerlink&#34; title=&#34;Jelly Bean 实现&#34;&gt;&lt;/a&gt;Jelly Bean 实现&lt;/h2&gt;&lt;p&gt;虽然对于 JB（Jelly Bean），把加密的应用程序容器作为一个前向锁定机制是新加的，但加密容器的想法开始于 Froyo。 当时（2010年5月），大多数Android 设备都配备有有限的内部存储空间和相当大（几GB）的外部存储设备，通常采用 micro SD 卡的形式。 为了使文件共享更容易，外部存储使用 FAT 文件系统进行了格式化，该文件系统缺少文件权限。 因此，任何人（任何应用程序）都可以读取和写入 SD 卡上的文件。 为了防止用户简单地将付费应用程序复制到 SD 卡上，Froyo 创建了一个加密的文件系统映像文件，并在您选择将应用移动到外部存储时将 APK 存储在其中。 然后使用 Linux 的设备映射程序在运行时安装映像，系统将从新创建的安装点（每个应用程序一个）加载应用程序文件。 基于此，JB 的容器使用 EXT4 文件系统，它允许权限。 典型的前向锁定应用程序的挂载点现在如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;shell@android:/mnt/asec/org.mypackage-1 # ls -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x system   system            2012-07-16 15:07 lib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwx------ root     root              1970-01-01 09:00 lost+found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r----- system   u0_a96    1319057 2012-07-16 15:07 pkg.apk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r-- system   system     526091 2012-07-16 15:07 res.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里 &lt;strong&gt;res.zip&lt;/strong&gt; 拥有应用程序资源，是公共可读的，而保存完整 APK 的 &lt;strong&gt;pkg.apk&lt;/strong&gt; 文件只能由系统和应用程序的专用用户（u0_a96）读取。 实际的应用程序容器存储在&lt;code&gt;/data/app-asec&lt;/code&gt; 中，文件名为 &lt;code&gt;pacakge.name-1.asec&lt;/code&gt; 。 ASEC 容器管理（创建&amp;#x2F;删除和挂载&amp;#x2F;卸载）在系统卷守护程序（vold）中实现，框架服务通过通过本地 &lt;strong&gt;socket&lt;/strong&gt; 发送命令与之通信。 我们可以使用 &lt;strong&gt;vdc&lt;/strong&gt; 实用程序从 &lt;strong&gt;shell&lt;/strong&gt; 管理转发锁定的应用程序：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;vdc asec list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vdc asec list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111 0 com.mypackage-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111 0 org.foopackage-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200 0 asec operation succeeded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;vdc asec unmount org.foopackage-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200 0 asec operation succeeded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;vdc asec mount org.foopackage-1 000102030405060708090a0b0c0d0e0f 1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;org.foopackage-1 000102030405060708090a0b0c0d0e0f  1000                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200 0 asec operation succeeded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;vdc asec path org.foopackage-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vdc asec path org.foopackage-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211 0 /mnt/asec/org.foopackage-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;所有命令都将命名空间 ID（实际上基于包名称）作为参数，对于 &lt;strong&gt;mount&lt;/strong&gt; 命令，您需要指定加密密钥和装载点的所有者 UID（1000是系统）。 那就是如何存储和使用应用程序，剩下的是找出实际的加密算法和密钥。 两者从原始的 Froyo 应用程序到 SD 实现没有变化：Twofish 与128位密钥存储在 &lt;code&gt;/data/misc/systemkeys&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;shell@android:/data/misc/systemkeys $ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AppsOnSD.sks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell@android:/data/misc/systemkeys $ od -t x1 AppsOnSD.sks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;od -t x1 AppsOnSD.sks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000020&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过指定 &lt;code&gt;pm install &lt;/code&gt;命令的 &lt;code&gt;-l&lt;/code&gt; 选项或为 &lt;code&gt;PackageManager&lt;/code&gt; 的 &lt;code&gt;installPackage*&lt;/code&gt; 方法指定 &lt;code&gt;INSTALL_FORWARD_LOCK&lt;/code&gt; 标志（请参阅&lt;a href=&#34;https://github.com/nelenkov/jb-app-encryption&#34;&gt;示例应用程序&lt;/a&gt;）来触发转发锁定应用程序。&lt;/p&gt;
&lt;h2 id=&#34;加密应用程序和-Google-Play&#34;&gt;&lt;a href=&#34;#加密应用程序和-Google-Play&#34; class=&#34;headerlink&#34; title=&#34;加密应用程序和 Google Play&#34;&gt;&lt;/a&gt;加密应用程序和 Google Play&lt;/h2&gt;&lt;p&gt;所有这一切都很有趣，但正如我们所见，安装应用程序、加密或其他都需要系统权限，因此它只能由自定义运营商Android 固件和下一个版本友好的 CyanogenMod ROM 使用。 目前唯一利用了新的加密应用程序和前向锁定基础设施的应用程序是 Play Store（谁出来了这些名字，真的？）Android 客户端。 要详细了解 Google Play 客户端的工作原理，需要详细了解底层协议（这始终是一个移动目标），但随意查看最新的 Android 客户端确实显示了一些有用的信息。 Google Play 服务器会发送相当多的有关您即将下载和安装的应用的元数据，例如下载网址，APK 文件大小，版本代码和退款窗口。 其中新增的是 &lt;code&gt;EncryptionParams&lt;/code&gt; ，它看起来非常类似于上面显示的&lt;code&gt;ContainerEncryptionParams&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AndroidAppDelivery$EncryptionParams&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; cachedSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String encryptionKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String hmacKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; version;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;加密算法和 HMAC 算法总是分别设置为 &lt;code&gt;&amp;#39;AES / CBC / PKCS5Padding&amp;#39;&lt;/code&gt; 和 &lt;code&gt;&amp;#39;HMACSHA1&amp;#39;&lt;/code&gt; 。 IV 和 MAC 标签与加密的APK 捆绑在一个 blob 中。 一旦读取和验证所有参数，它们基本上将转换为 &lt;code&gt;ContainerEncryptionParams&lt;/code&gt; 实例，并使用熟悉的 &lt;code&gt;PackageManager.installPackageWithVerification()&lt;/code&gt; 方法安装应用程序。 如可能预期的，安装付费应用程序时，将设置 &lt;code&gt;INSTALL_FORWARD_LOCK&lt;/code&gt; 标志。 操作系统从这里获取它，并且过程与上一节中描述的相同：免费应用程序被解密，APK最终在 &lt;code&gt;/data/app&lt;/code&gt; 中，而在 &lt;code&gt;/data/app-asec&lt;/code&gt; 中的加密容器被创建和装载在付费应用的 &lt;code&gt;/mnt/asec/package.name&lt;/code&gt; 下。&lt;/p&gt;
&lt;p&gt;那么在实践中这是什么意思？ Google Play 现在声称，付费应用程序始终以加密形式传输和存储，因此，如果您决定使用 Jelly Bean 提供的应用程序加密设施实现它，则您自己的应用程序分发渠道也会如此。 应用程序必须在某些时候可用于操作系统，所以如果你有 root 用户访问正在运行的 Android 设备，仍然可以提取前向锁定 APK 或容器加密密钥，但这确实是所有软件的解决方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新：&lt;/strong&gt;虽然正向锁定使得复制付费应用程序更难，似乎它与其他服务的集成仍然有一些问题。 根据&lt;a href=&#34;http://code.google.com/p/android/issues/detail?id=34880&#34;&gt;这里&lt;/a&gt;的多个开发人员和用户的报告，它目前打破了应用程序注册自己账户管理的实现，包含大多数付费小部件的应用程序。 这是由于一些服务在 &lt;code&gt;/mnt/asec&lt;/code&gt; 被挂载之前被初始化，因此不能访问它。 据说有一个可用的修复（没有Gerrit链接），并应在 Jelly Bean 维护版中发布。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新2&lt;/strong&gt;：似乎最新版本的 Google Play 客户端（3.7.15）安装了带有小部件的付费应用程序，并且可能还会在 &lt;code&gt;/data/app&lt;/code&gt; 中管理帐户（临时？）解决方法。 下载的 APK 仍会加密传输。 例如：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;shell@android:/data/app # ls -l|grep -i beautiful&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -l|grep -i beautiful&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r-- system   system    6046274 2012-08-06 10:45 com.levelup.beautifulwidgets-1.apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这就是现在的情况。 希望，很快就会从官方来源获得有关应用加密操作系统实施和设计以及 Google Play 商店的使用情况的更详细信息。 在那之前，获取&lt;a href=&#34;https://github.com/nelenkov/jb-app-encryption&#34;&gt;示例项目&lt;/a&gt;，启动 OpenSSL 并尝试。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://plus.google.com/117221066931981967754&#34;&gt;Nikolay Elenkov&lt;/a&gt; 发布于 2012 年 7 月 6 日。&lt;/p&gt;
</content>
        <category term="Android" />
        <category term="ADB" />
        <updated>2017-01-05T11:56:25.000Z</updated>
    </entry>

    <follow_challenge>
        <feedId>73986782175755264</feedId>
        <userId>72100854660436992</userId>
    </follow_challenge>
</feed>
